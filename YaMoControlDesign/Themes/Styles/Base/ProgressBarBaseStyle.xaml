<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shapes="clr-namespace:YaMoControlDesign.Tools.Shapes"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:ym="clr-namespace:YaMoControlDesign.Controls">

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#00FFFFFF" />
        <GradientStop Offset="0.4" Color="#60FFFFFF" />
        <GradientStop Offset="0.6" Color="#60FFFFFF" />
        <GradientStop Offset="1" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <Style x:Key="ProgressBarBaseStyle" TargetType="ProgressBar">
        <Setter Property="ym:VisualElement.Text">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource Number2PercentageConverter}" StringFormat="{}{0:F0} %">
                    <Binding Path="Value" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="Maximum" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="20" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="TemplateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <ym:SimplePanel>
                            <Rectangle x:Name="PART_Track" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{Binding Path=(ym:VisualElement.Text), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Visibility, ElementName=PART_GlowRect}" />
                            <Border
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource BorderClip}">
                                <ym:SimplePanel>
                                    <Border x:Name="Indicator" Background="{TemplateBinding Foreground}">
                                        <Border Width="{Binding ActualWidth, ElementName=TemplateRoot}">
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource TextIconBrush}"
                                                Text="{Binding Path=(ym:VisualElement.Text), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Border>
                                    </Border>
                                    <Rectangle
                                        x:Name="PART_GlowRect"
                                        Width="100"
                                        Margin="-100,0,0,0"
                                        HorizontalAlignment="Left"
                                        Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" />
                                    <Rectangle
                                        x:Name="Animation"
                                        Fill="{TemplateBinding Foreground}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Visibility="Collapsed">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </ym:SimplePanel>
                            </Border>
                        </ym:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_GlowRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressBarStripeBaseStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="20" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnLoaded">
                            <DoubleAnimationUsingKeyFrames
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="Indicator"
                                Storyboard.TargetProperty="(Border.Background).(Brush.Transform).(TransformGroup.Children)[1].(TranslateTransform.X)">
                                <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                                <LinearDoubleKeyFrame KeyTime="0:0:.25" Value="21" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ym:SimplePanel x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Rectangle x:Name="PART_Track" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Border
                                x:Name="Indicator"
                                Background="{TemplateBinding Foreground}"
                                CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Decorator>
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="Indicator">
                            <BeginStoryboard Storyboard="{StaticResource OnLoaded}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CircleProgressBarIndeterminateTemplate" TargetType="ym:CircleProgressBar">
        <ControlTemplate.Resources>
            <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="TemplateRoot"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                    <LinearDoubleKeyFrame KeyTime="0:0:1.568" Value="360" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="135" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="270" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.999"
                        Value="405" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:2.666"
                        Value="540" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:3.333"
                        Value="675" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:3.999"
                        Value="810" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:4.666"
                        Value="945" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:5.332"
                        Value="1080" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(shapes:Arc.StartAngle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="-5" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="-130" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="-5" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(shapes:Arc.EndAngle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="5" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="130" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <ym:SimplePanel x:Name="TemplateRoot" RenderTransformOrigin="0.5,0.5">
            <ym:SimplePanel.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                </TransformGroup>
            </ym:SimplePanel.RenderTransform>
            <shapes:Arc
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="360"
                Fill="{TemplateBinding Background}"
                Stretch="None"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="0" />
            <shapes:Arc
                x:Name="arc"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="5"
                Fill="{TemplateBinding Foreground}"
                RenderTransformOrigin="0.5,0.5"
                StartAngle="-5"
                Stretch="None"
                StrokeThickness="0">
                <shapes:Arc.RenderTransform>
                    <TransformGroup>
                        <RotateTransform />
                    </TransformGroup>
                </shapes:Arc.RenderTransform>
            </shapes:Arc>
        </ym:SimplePanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CircleProgressBarTemplate" TargetType="ym:CircleProgressBar">
        <ym:SimplePanel x:Name="TemplateRoot">
            <shapes:Arc
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="360"
                Fill="{TemplateBinding Background}"
                Stretch="None"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="0" />
            <shapes:Arc
                x:Name="PART_Indicator"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                Fill="{TemplateBinding Foreground}"
                Stretch="None"
                StrokeThickness="0" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding Foreground}"
                Text="{TemplateBinding Text}"
                Visibility="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
        </ym:SimplePanel>
    </ControlTemplate>

    <Style x:Key="ProgressBarCircleBaseStyle" TargetType="ym:CircleProgressBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Width" Value="100" />
        <Setter Property="ArcThickness" Value="4" />
        <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat={}{0:F0} %}" />
        <Setter Property="Template" Value="{StaticResource CircleProgressBarTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter Property="Template" Value="{StaticResource CircleProgressBarIndeterminateTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProgressBarWaveBaseStyle" TargetType="ym:WaveProgressBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat={}{0:F0} %}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:WaveProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardOnLoaded" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Wave" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-400" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{StaticResource BorderCircular}">
                            <Viewbox>
                                <Border
                                    x:Name="PART_Clip"
                                    Width="200"
                                    Height="200"
                                    CornerRadius="100"
                                    Style="{StaticResource BorderCircularClip}">
                                    <Path
                                        x:Name="PART_Wave"
                                        Width="600"
                                        Height="250"
                                        Margin="0,0,-400,-20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="{TemplateBinding WaveFill}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        Stroke="{TemplateBinding WaveStroke}"
                                        StrokeThickness="{TemplateBinding WaveThickness}"
                                        UseLayoutRounding="False">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,1">
                                                    <PolyBezierSegment Points="0.5,1 0.5,0 1,0" />
                                                    <PolyBezierSegment Points="1.5,0 1.5,1 2,1" />
                                                    <PolyBezierSegment Points="2.5,1 2.5,0 3,0" />
                                                    <PolyLineSegment Points="3,0 3,10, 0,10 0,1" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Border>
                            </Viewbox>
                        </Border>
                        <TextBlock
                            Margin="0,10,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Text}"
                            Visibility="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Wave">
                            <BeginStoryboard Name="BeginStoryboardWave" Storyboard="{StaticResource StoryboardOnLoaded}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="PART_Wave">
                            <StopStoryboard BeginStoryboardName="BeginStoryboardWave" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
