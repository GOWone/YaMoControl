<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:YaMoControlDesign.Tools.Converter"
    xmlns:interactivity="clr-namespace:YaMoControlDesign.Interactivity"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:shapes="clr-namespace:YaMoControlDesign.Tools.Shapes"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:ym="clr-namespace:YaMoControlDesign.Controls">

    <!--  基础配置  -->
    <!--  region Color  -->
    <!--  Color  YES  -->
    <Color x:Key="LightPrimaryColor">#f3fbff</Color>
    <Color x:Key="PrimaryColor">#326cf3</Color>
    <Color x:Key="DarkPrimaryColor">#326cf3</Color>

    <Color x:Key="LightDangerColor">#fff6f7</Color>
    <Color x:Key="DangerColor">#db3340</Color>
    <Color x:Key="DarkDangerColor">#db3340</Color>

    <Color x:Key="LightWarningColor">#fffcf5</Color>
    <Color x:Key="WarningColor">#e9af20</Color>
    <Color x:Key="DarkWarningColor">#e9af20</Color>

    <Color x:Key="LightInfoColor">#f1fdff</Color>
    <Color x:Key="InfoColor">#00bcd4</Color>
    <Color x:Key="DarkInfoColor">#00bcd4</Color>

    <Color x:Key="LightSuccessColor">#f3fff6</Color>
    <Color x:Key="SuccessColor">#2db84d</Color>
    <Color x:Key="DarkSuccessColor">#2db84d</Color>

    <Color x:Key="PrimaryTextColor">#212121</Color>
    <Color x:Key="SecondaryTextColor">#757575</Color>
    <Color x:Key="ThirdlyTextColor">#bdbdbd</Color>
    <Color x:Key="ReverseTextColor">#212121</Color>
    <Color x:Key="TextIconColor">White</Color>

    <Color x:Key="BorderColor">#e0e0e0</Color>
    <Color x:Key="SecondaryBorderColor">#757575</Color>
    <Color x:Key="BackgroundColor">#eeeeee</Color>
    <Color x:Key="RegionColor">#ffffff</Color>
    <Color x:Key="SecondaryRegionColor">#eeeeee</Color>
    <Color x:Key="ThirdlyRegionColor">White</Color>
    <Color x:Key="TitleColor">#326cf3</Color>
    <Color x:Key="SecondaryTitleColor">#326cf3</Color>

    <Color x:Key="DefaultColor">White</Color>
    <Color x:Key="DarkDefaultColor">#f5f5f5</Color>

    <Color x:Key="AccentColor">#f8491e</Color>
    <Color x:Key="DarkAccentColor">#f8491e</Color>

    <Color x:Key="DarkMaskColor">#20000000</Color>
    <Color x:Key="DarkOpacityColor">#40000000</Color>

    <system:UInt32 x:Key="BlurGradientValue">0x99FFFFFF</system:UInt32>
    <!--  endregion  -->

    <!--  region Brushes  -->
    <!--  Brushes  YES  -->
    <SolidColorBrush
        x:Key="LightPrimaryBrush"
        o:Freeze="True"
        Color="{DynamicResource LightPrimaryColor}" />
    <LinearGradientBrush x:Key="PrimaryBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource PrimaryColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource DarkPrimaryColor}" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="DarkPrimaryBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkPrimaryColor}" />

    <SolidColorBrush
        x:Key="PrimaryTextBrush"
        o:Freeze="True"
        Color="{DynamicResource PrimaryTextColor}" />
    <SolidColorBrush
        x:Key="SecondaryTextBrush"
        o:Freeze="True"
        Color="{DynamicResource SecondaryTextColor}" />
    <SolidColorBrush
        x:Key="ThirdlyTextBrush"
        o:Freeze="True"
        Color="{DynamicResource ThirdlyTextColor}" />
    <SolidColorBrush
        x:Key="ReverseTextBrush"
        o:Freeze="True"
        Color="{DynamicResource ReverseTextColor}" />
    <SolidColorBrush
        x:Key="TextIconBrush"
        o:Freeze="True"
        Color="{DynamicResource TextIconColor}" />

    <SolidColorBrush
        x:Key="BorderBrush"
        o:Freeze="True"
        Color="{DynamicResource BorderColor}" />
    <SolidColorBrush
        x:Key="SecondaryBorderBrush"
        o:Freeze="True"
        Color="{DynamicResource SecondaryBorderColor}" />
    <SolidColorBrush
        x:Key="BackgroundBrush"
        o:Freeze="True"
        Color="{DynamicResource BackgroundColor}" />
    <SolidColorBrush
        x:Key="RegionBrush"
        o:Freeze="True"
        Color="{DynamicResource RegionColor}" />
    <SolidColorBrush
        x:Key="SecondaryRegionBrush"
        o:Freeze="True"
        Color="{DynamicResource SecondaryRegionColor}" />
    <SolidColorBrush
        x:Key="ThirdlyRegionBrush"
        o:Freeze="True"
        Color="{DynamicResource ThirdlyRegionColor}" />
    <LinearGradientBrush x:Key="TitleBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource TitleColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource SecondaryTitleColor}" />
    </LinearGradientBrush>

    <SolidColorBrush
        x:Key="DefaultBrush"
        o:Freeze="True"
        Color="{DynamicResource DefaultColor}" />
    <SolidColorBrush
        x:Key="DarkDefaultBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkDefaultColor}" />

    <SolidColorBrush
        x:Key="LightDangerBrush"
        o:Freeze="True"
        Color="{DynamicResource LightDangerColor}" />
    <LinearGradientBrush x:Key="DangerBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource DangerColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource DarkDangerColor}" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="DarkDangerBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkDangerColor}" />

    <SolidColorBrush
        x:Key="LightWarningBrush"
        o:Freeze="True"
        Color="{DynamicResource LightWarningColor}" />
    <LinearGradientBrush x:Key="WarningBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource WarningColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource DarkWarningColor}" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="DarkWarningBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkWarningColor}" />

    <SolidColorBrush
        x:Key="LightInfoBrush"
        o:Freeze="True"
        Color="{DynamicResource LightInfoColor}" />
    <LinearGradientBrush x:Key="InfoBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource InfoColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource DarkInfoColor}" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="DarkInfoBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkInfoColor}" />

    <SolidColorBrush
        x:Key="LightSuccessBrush"
        o:Freeze="True"
        Color="{DynamicResource LightSuccessColor}" />
    <LinearGradientBrush x:Key="SuccessBrush" o:Freeze="True" StartPoint="0,0" EndPoint="1,0">
        <GradientStop o:Freeze="True" Offset="0" Color="{DynamicResource SuccessColor}" />
        <GradientStop o:Freeze="True" Offset="1" Color="{DynamicResource DarkSuccessColor}" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="DarkSuccessBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkSuccessColor}" />

    <SolidColorBrush
        x:Key="AccentBrush"
        o:Freeze="True"
        Color="{DynamicResource AccentColor}" />
    <SolidColorBrush
        x:Key="DarkAccentBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkAccentColor}" />

    <SolidColorBrush
        x:Key="DarkMaskBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkMaskColor}" />
    <SolidColorBrush
        x:Key="DarkOpacityBrush"
        o:Freeze="True"
        Color="{DynamicResource DarkOpacityColor}" />

    <!--  endregion  -->

    <!--  region Effects  -->
    <!--  Effects  YES  -->
    <Color x:Key="EffectShadowColor">#88000000</Color>

    <DropShadowEffect
        x:Key="EffectShadow1"
        o:Freeze="True"
        BlurRadius="5"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="1"
        Color="{StaticResource EffectShadowColor}" />
    <DropShadowEffect
        x:Key="EffectShadow2"
        o:Freeze="True"
        BlurRadius="8"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="1.5"
        Color="{StaticResource EffectShadowColor}" />
    <DropShadowEffect
        x:Key="EffectShadow3"
        o:Freeze="True"
        BlurRadius="14"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="4.5"
        Color="{StaticResource EffectShadowColor}" />
    <DropShadowEffect
        x:Key="EffectShadow4"
        o:Freeze="True"
        BlurRadius="25"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="8"
        Color="{StaticResource EffectShadowColor}" />
    <DropShadowEffect
        x:Key="EffectShadow5"
        o:Freeze="True"
        BlurRadius="35"
        Direction="270"
        Opacity=".2"
        RenderingBias="Performance"
        ShadowDepth="13"
        Color="{StaticResource EffectShadowColor}" />

    <!--  endregion  -->

    <!--  region Fonts  -->
    <!--  Fonts  YES  -->
    <system:Double x:Key="LargeFontSize">24</system:Double>
    <system:Double x:Key="HeadFontSize">20</system:Double>
    <system:Double x:Key="SubHeadFontSize">16</system:Double>
    <system:Double x:Key="TextFontSize">12</system:Double>
    <!--  endregion  -->

    <!--  region Geometries  -->
    <!--  Geometries  YES  -->
    <Geometry x:Key="CalendarGeometry" o:Freeze="True">M377.897477 116.291025l265.298718 0 0 47.459125-265.298718 0 0-47.459125ZM888.317416 116.291025 748.229288 116.291025l0 47.459125 123.54866 0c18.167626 0 32.894732 14.727106 32.894732 32.894732l0 92.92987L115.42936 289.574752l0-92.92987c0-18.167626 14.727106-32.894732 32.894732-32.894732l123.54866 0 0-47.459125L131.776437 116.291025c-35.244356 0-63.814389 28.571056-63.814389 63.815412l0.004093 713.966329c0 35.243333 28.571056 63.814389 63.814389 63.814389l756.540979 0c35.244356 0 63.814389-28.571056 63.814389-63.815412l-0.004093-713.966329C952.131805 144.861058 923.560749 116.291025 888.317416 116.291025zM904.67268 337.033877l0 540.498398c0 18.167626-14.727106 32.894732-32.894732 32.894732L148.324092 910.427007c-18.167626 0-32.894732-14.727106-32.894732-32.894732L115.42936 337.033877 904.67268 337.033877zM300.659736 64.801927l47.459125 0 0 170.241292-47.459125 0 0-170.241292ZM672.97481 64.801927l47.450938 0 0 170.241292-47.450938 0 0-170.241292ZM358.384138 547.939214l0 231.021432 52.863464 0L411.247602 459.226591l-34.580198 0-2.651514 3.804835c-18.000819 25.896006-41.448959 48.758786-69.681285 67.955908l-3.886703 2.643327 0 53.742526 13.441772-8.069156C330.690097 569.215794 345.588103 558.712075 358.384138 547.939214zM618.031888 726.552576c-10.287791 6.395971-24.435678 8.069156-42.059902 4.948946-16.094309-2.842881-27.898712-18.373321-35.082666-46.159464l-2.261615-8.753781-48.312603 13.424375 1.68956 8.129534c6.270098 30.168514 18.347737 52.052967 35.884976 65.017855 17.120734 12.705979 35.542152 19.777364 54.731087 21.043255 3.358652 0.225138 6.655903 0.337707 9.897892 0.337707 14.859119 0 28.430857-2.374184 40.452211-7.072408 14.417029-5.641758 26.88866-13.338413 37.076162-22.86278 10.365566-9.723922 18.230051-22.143362 23.378552-36.920612 4.918246-14.170401 7.739636-28.296797 8.385373-42.025108 0.60685-13.658723-0.667228-26.650218-3.791531-38.619382l-0.008187-0.017397c-3.111-11.777796-8.133628-23.738773-14.946104-35.551363-7.353831-12.679372-19.028268-22.750211-34.710165-29.952586-15.037183-6.872854-30.927843-10.685876-47.24729-11.32752-11.414505-0.415482-23.487027 1.386646-36.04462 5.434017 3.813022-14.568486 7.648557-31.884681 11.465673-51.775637l113.87693 0 0-49.357449L535.645647 464.492778l-1.495122 7.028404c-24.621928 115.77116-31.589954 145.497585-33.102473 150.039235l-3.432334 10.338958 45.829943 5.391036 3.054716-4.20292c8.146931-11.214951 18.247448-18.139996 30.879746-21.164011 13.004799-3.137607 24.743707-3.180588 34.879018-0.129966 9.857981 2.95545 17.822756 8.771178 24.327202 17.758284 6.512633 9.03111 10.084143 20.392401 10.617311 33.757421 0.519864 13.849067-1.603598 26.442477-6.314102 37.440476C636.315153 711.429431 628.843637 719.871089 618.031888 726.552576z</Geometry>
    <Geometry x:Key="DeleteGeometry" o:Freeze="True">M512 620.544l253.3376 253.3376a76.6976 76.6976 0 1 0 108.544-108.544L620.6464 512l253.2352-253.3376a76.6976 76.6976 0 1 0-108.544-108.544L512 403.3536 258.6624 150.1184a76.6976 76.6976 0 1 0-108.544 108.544L403.3536 512 150.1184 765.3376a76.6976 76.6976 0 1 0 108.544 108.544L512 620.6464z</Geometry>
    <Geometry x:Key="DeleteFillCircleGeometry" o:Freeze="True">M7.4038057,6.4038057 C7.1478834,6.4038057 6.8919611,6.5014372 6.6966991,6.6966991 6.3061748,7.0872235 6.3061748,7.7203884 6.6966991,8.1109123 L10.585787,12 6.6966991,15.889088 C6.3061748,16.279612 6.3061748,16.912777 6.6966991,17.303301 7.0872235,17.693825 7.7203879,17.693825 8.1109123,17.303301 L12,13.414213 15.889088,17.303301 C16.279612,17.693825 16.912777,17.693825 17.303301,17.303301 17.693825,16.912777 17.693825,16.279612 17.303301,15.889088 L13.414213,12 17.303301,8.1109123 C17.693825,7.7203884 17.693825,7.0872235 17.303301,6.6966991 16.912777,6.3061748 16.279612,6.3061748 15.889088,6.6966991 L12,10.585787 8.1109123,6.6966991 C7.9156504,6.5014372 7.6597281,6.4038057 7.4038057,6.4038057 z M12,0 C18.627417,0 24,5.3725829 24,12 24,18.627417 18.627417,24 12,24 5.3725829,24 0,18.627417 0,12 0,5.3725829 5.3725829,0 12,0 z</Geometry>
    <Geometry x:Key="CloseGeometry" o:Freeze="True">M0.7,0 L5,4.3 L9.3,0 L10,0.7 L5.7,5 L10,9.3 L9.3,10 L5,5.7 L0.7,10 L0,9.3 L4.3,5 L0,0.7 z</Geometry>
    <Geometry x:Key="DownGeometry" o:Freeze="True">M512 801.6896L5.12 282.0096l58.1632-59.5968L512 682.3936l448.7168-460.0832 58.1632 59.5968-506.88 519.7824z</Geometry>
    <Geometry x:Key="UpGeometry" o:Freeze="True">M50.000001,0 L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288 z</Geometry>
    <Geometry x:Key="ClockGeometry" o:Freeze="True">M498.506684 256.571517 425.359734 256.571517 425.359734 622.190635 720.166063 622.190635 720.166063 549.725206 498.506684 549.725206ZM512.714268 80.162738c-245.740844 0-445.181175 197.577914-445.181175 441.024505s199.439308 441.024505 445.181175 441.024505c245.738797 0 445.178105-197.577914 445.178105-441.024505S758.453065 80.162738 512.714268 80.162738zM512.714268 874.005824c-195.880249 0-356.145349-158.768003-356.145349-352.818581s160.2651-352.821651 356.145349-352.821651c195.877179 0 356.14228 158.77005 356.14228 352.821651S708.591447 874.005824 512.714268 874.005824z</Geometry>
    <Geometry x:Key="LeftGeometry" o:Freeze="True">M394.24 512L683.52 248.32c10.24-10.24 10.24-25.6 0-35.84-10.24-10.24-25.6-10.24-35.84 0l-307.2 279.04c-5.12 5.12-7.68 12.8-7.68 20.48 0 7.68 2.56 15.36 7.68 20.48l307.2 279.04c10.24 10.24 25.6 10.24 35.84 0 10.24-10.24 10.24-25.6 0-35.84L394.24 512z</Geometry>
    <Geometry x:Key="RightGeometry" o:Freeze="True">M4.1666641,0 C5.2083321,0 6.25,0.41666794 7.0833321,1.25 L57.083331,46.666664 C57.916664,47.499998 58.33333,48.749998 58.333329,49.999998 58.33333,51.249997 57.916664,52.499997 57.083331,53.333331 L7.0833321,98.749996 C5.4166641,100.41666 2.9166641,100.41666 1.2499962,98.749996 -0.41666794,97.083328 -0.41666794,94.583328 1.2499962,92.916664 L48.333331,49.999998 1.2499962,7.0833321 C-0.41666794,5.4166641 -0.41666794,2.9166641 1.2499962,1.25 2.0833282,0.41666794 3.1249962,0 4.1666641,0 z</Geometry>
    <Geometry x:Key="RotateLeftGeometry" o:Freeze="True">M165.238899 508.178506C164.450369 456.442676 171.767779 404.485842 187.244542 353.863631 266.138632 95.812692 533.436225-51.353028 784.380224 25.368251 1035.324219 102.08953 1174.62994 373.566359 1095.735851 631.617298 1016.84176 889.66824 749.544168 1036.833959 498.600172 960.11268 424.134741 937.346313 357.837833 896.870788 303.973868 842.276436 291.310328 829.441176 291.396506 808.495802 304.166356 795.493625 316.936205 782.491452 337.554042 782.356136 350.217582 795.191397 396.640587 842.243889 453.73137 877.098901 517.975091 896.740177 734.436966 962.919213 965.320335 835.802028 1033.557737 612.607541 1101.795139 389.413057 981.467179 154.919792 765.005305 88.740755 548.543428 22.561718 317.660056 149.678904 249.422655 372.873388 235.597198 418.094418 229.294871 464.461039 230.4403 510.559881L311.240978 429.759202C323.584094 417.416085 343.892513 417.712357 356.601099 430.420946 369.309686 443.129535 369.605959 463.437952 357.262842 475.781068L230.778782 602.265128C229.273826 605.769679 227.098877 609.041396 224.251145 611.889128 211.908029 624.232245 191.59961 623.935974 178.891024 611.227385L40.825428 473.16179C28.11684 460.453206 27.820569 440.144784 40.163685 427.801668 52.506801 415.458551 72.815218 415.754827 85.523806 428.463411L165.238899 508.178506Z</Geometry>
    <Geometry x:Key="RotateRightGeometry" o:Freeze="True">M13.1117823382705,0.00108644926083379C18.7165758868546,0.0742913923738762 23.9197352191299,3.84162509632329 25.6893389483779,9.62980814885544 26.1165926715226,11.0273168346189 26.3185999652236,12.461670228202 26.296833302626,13.8899238456496L28.4974711200089,11.6892569876356C28.8483088275283,11.3384168617557 29.4089472552627,11.330238049977 29.7496950885147,11.6709881771838 30.0904429217666,12.0117402117628 30.0822642108291,12.572387459387 29.7314265033096,12.923229492639L25.9199488421768,16.7347560556155C25.5691111346572,17.0855980888674 25.0084688922257,17.0937769006462 24.6677210589736,16.7530248660672 24.5891077777236,16.674408708165 24.5290644427627,16.5840870073788 24.4875185748428,16.4873374624474L20.9957621356339,12.9955379708416C20.6550143023818,12.6547878436347 20.6631930133193,12.0941405960106 21.0140307208389,11.7432985627585 21.3648684283584,11.3924565295065 21.9255068560928,11.3842777177278 22.2662546893447,11.7250297523068L24.4968645831436,13.9556652415401C24.5284846087783,12.6830303030582 24.3545000811904,11.4030042974954 23.9728319903702,10.1546044295501 22.0890505572647,3.99295504901009 15.7152140399307,0.483677352708723 9.73950221742095,2.3106585349176 3.76379420960845,4.13763876344051 0.441986348280352,10.6112083411418 2.32576778138575,16.7728577216819 4.20954921449125,22.9345051948497 10.5833819171279,26.4437838448372 16.5590937396377,24.6168036163144 18.3326227923721,24.0745720467974 19.9086878558486,23.1123447593618 21.1902544757217,21.8133823630949 21.5398485919327,21.4590441166922 22.1090319415421,21.4627806587338 22.4615595599502,21.8217271162507 22.8140871783584,22.1806735737676 22.8164675494522,22.7589048852417 22.4668734332412,23.1132431316444 20.9798891803115,24.6204085496776 19.1496775409072,25.7378005615073 17.0939638873428,26.3663063881084 10.1663286944717,28.484321088751 2.78723170960845,24.4215726325395 0.609260823377952,17.2976520950044 -1.56871387754975,10.1737353722136 2.27700069154205,2.6791733248245 9.20463588441315,0.561156716809679 10.5035670062393,0.164028483596132 11.8183710833877,-0.0158071458708005 13.1117823382705,0.00108644926083379z</Geometry>
    <Geometry x:Key="EnlargeGeometry" o:Freeze="True">M750.3 198.7C598 46.4 351.1 46.4 198.7 198.7s-152.3 399.2 0 551.5C345.1 896.6 578.8 902.3 732 767.3l172.1 172.1 35.4-35.4-172.1-171.9c135-153.2 129.3-387-17.1-533.4z m39.3 403.8c-17.1 42.1-42.2 80-74.7 112.4-32.5 32.5-70.3 57.6-112.4 74.7-40.7 16.5-83.8 24.9-128 24.9s-87.2-8.4-128-24.9c-42.1-17.1-80-42.2-112.4-74.7s-57.6-70.3-74.7-112.4c-16.5-40.7-24.9-83.8-24.9-128s8.4-87.2 24.9-128c17.1-42.1 42.2-80 74.7-112.4s70.3-57.6 112.4-74.7c40.7-16.5 83.8-24.9 128-24.9s87.2 8.4 128 24.9c42.1 17.1 80 42.2 112.4 74.7 32.5 32.5 57.6 70.3 74.7 112.4 16.5 40.7 24.9 83.8 24.9 128s-8.4 87.3-24.9 128zM671 502H496v175h-50V502H271v-50h175V277h50v175h175v50z</Geometry>
    <Geometry x:Key="ReduceGeometry" o:Freeze="True">M750.3 198.7C598 46.4 351.1 46.4 198.7 198.7s-152.3 399.2 0 551.5C345.1 896.6 578.8 902.3 732 767.3l172.1 172.1 35.4-35.4-172.1-171.9c135-153.2 129.3-387-17.1-533.4z m39.3 403.8c-17.1 42.1-42.2 80-74.7 112.4-32.5 32.5-70.3 57.6-112.4 74.7-40.7 16.5-83.8 24.9-128 24.9s-87.2-8.4-128-24.9c-42.1-17.1-80-42.2-112.4-74.7s-57.6-70.3-74.7-112.4c-16.5-40.7-24.9-83.8-24.9-128s8.4-87.2 24.9-128c17.1-42.1 42.2-80 74.7-112.4s70.3-57.6 112.4-74.7c40.7-16.5 83.8-24.9 128-24.9s87.2 8.4 128 24.9c42.1 17.1 80 42.2 112.4 74.7 32.5 32.5 57.6 70.3 74.7 112.4 16.5 40.7 24.9 83.8 24.9 128s-8.4 87.3-24.9 128zM671 502H271v-50h400v50z</Geometry>
    <Geometry x:Key="DownloadGeometry" o:Freeze="True">M868.100096 742.600704l-0.049152 0L216.246272 742.600704l-0.049152 0c-13.98784 0-25.327616 11.33568-25.327616 25.352192 0 13.993984 11.360256 25.327616 25.327616 25.327616l0.049152 0 651.804672 0 0.049152 0c13.996032 0 25.33376-11.333632 25.33376-25.327616C893.431808 753.936384 882.096128 742.600704 868.100096 742.600704L868.100096 742.600704 868.100096 742.600704M523.15136 688.433152c4.728832 4.757504 11.237376 7.733248 18.47296 7.733248l0 0 0 0c7.231488 0 13.740032-2.951168 18.42176-7.757824l314.836992-314.83904c4.732928-4.704256 7.714816-11.214848 7.7312-18.395136 0-14.342144-11.712512-25.9584-25.972736-25.9584-7.213056-0.02048-13.694976 2.930688-18.376704 7.636992L567.578624 607.51872 567.578624 117.52448c-0.024576-0.026624-0.024576-0.026624-0.024576-0.0512 0.024576-14.344192-11.59168-25.980928-25.901056-25.980928-14.348288 0-25.960448 11.634688-25.960448 25.980928 0 0 0 0.024576 0.024576 0.0512l0 489.967616L245.055488 336.826368c-4.683776-4.704256-11.2128-7.6288-18.374656-7.60832-14.342144-0.02048-25.954304 11.614208-26.005504 25.9072 0 7.20896 2.951168 13.768704 7.684096 18.423808L523.15136 688.433152 523.15136 688.433152 523.15136 688.433152M523.15136 688.433152 523.15136 688.433152z</Geometry>
    <Geometry x:Key="SaveGeometry" o:Freeze="True">M608 320C625.664 320 640 305.696 640 288L640 160C640 142.304 625.664 128 608 128 590.336 128 576 142.304 576 160L576 288C576 305.696 590.336 320 608 320L608 320ZM960 896C960 931.328 931.328 960 896 960L128 960C92.672 960 64 931.328 64 896L64 128C64 92.672 92.672 64 128 64L192 64 192 384C192 419.328 220.672 448 256 448L768 448C803.328 448 832 419.328 832 384L832 64 896 64C931.328 64 960 92.672 960 128L960 896 960 896ZM256 64 768 64 768 352C768 369.696 753.664 384 736 384L288 384C270.336 384 256 369.696 256 352L256 64 256 64ZM896 0 128 0C57.312 0 0 57.312 0 128L0 896C0 966.688 57.312 1024 128 1024L896 1024C966.688 1024 1024 966.688 1024 896L1024 128C1024 57.312 966.688 0 896 0L896 0Z</Geometry>
    <Geometry x:Key="WindowsGeometry" o:Freeze="True">M426.276571 574.829714l0 372.004571-389.705143-53.686857 0-318.317714 389.705143 0zM426.276571 150.308571l0 376.539429-389.705143 0 0-322.852571zM987.428571 574.829714l0 449.170286-518.290286-71.460571 0-377.709714 518.290286 0zM987.428571 73.142857l0 453.705143-518.290286 0 0-382.317714z</Geometry>
    <Geometry x:Key="FullScreenGeometry" o:Freeze="True">M942 82v320h-50V167.4l-274 274-35.4-35.4 274-274H622V82h320zM406 582.6l-274 274V622H82v320h320v-50H167.4l274-274-35.4-35.4zM132 132h302V82H82v352h50V132z m760 760H590v50h352V590h-50v302z</Geometry>
    <Geometry x:Key="FullScreenReturnGeometry" o:Freeze="True">M94.186081,59.07 L100,59.07 100,100 59.07,100 59.07,94.186081 94.186081,94.186081 z M4.5814285,58.208999 L41.791,58.208999 41.791,95.418571 35.977005,95.418571 35.977005,68.139304 4.1163101,100 0,95.88369 31.860695,64.022995 4.5814285,64.022995 z M95.88369,0 L100,4.1163101 68.139304,35.977005 95.418571,35.977005 95.418571,41.791 58.208999,41.791 58.208999,4.5814285 64.022995,4.5814285 64.022995,31.860695 z M0,0 L40.929998,0 40.929998,5.8139191 5.8139191,5.8139191 5.8139191,40.929998 0,40.929998 z</Geometry>
    <Geometry x:Key="SearchGeometry" o:Freeze="True">M716.6003 213.800623c-138.851102-138.915088-364.020238-138.915088-502.935326 0s-138.915088 364.084225 0 502.935326a355.573996 355.573996 0 0 0 502.935326 0 355.573996 355.573996 0 0 0 0-502.935326z m-580.359212 580.359212a465.183184 465.183184 0 1 1 657.783099 0 465.183184 465.183184 0 0 1-657.783099 0z m868.939152 211.156054a63.474789 63.474789 0 0 1-89.837303 0l-89.773316-89.837303a63.410803 63.410803 0 1 1 89.773316-89.773316l89.837303 89.773316a63.346816 63.346816 0 0 1 0 89.837303z</Geometry>
    <Geometry x:Key="UpDownGeometry" o:Freeze="True">M454.464 143.68l-253.44 253.44c-12.032 12.032-12.032 31.36 0 43.392 11.968 11.968 31.36 11.968 43.328 0l237.376-237.376 237.376 237.376c11.968 11.968 31.36 11.968 43.328 0 12.032-12.032 12.032-31.36 0-43.392l-253.44-253.44C491.264 126.016 478.016 124.032 454.464 143.68zM507.968 947.648l252.48-253.376c11.968-11.968 11.968-31.36 0-43.392-11.968-11.968-31.296-11.968-43.264 0l-236.48 237.376L244.16 650.88c-11.968-11.968-31.296-11.968-43.264 0-11.968 12.032-11.968 31.424 0 43.392l252.48 253.376C465.984 960 491.136 964.48 507.968 947.648z</Geometry>
    <Geometry x:Key="WindowMinGeometry" o:Freeze="True">M0,4 L10,4 L10,5 L0,5 z</Geometry>
    <Geometry x:Key="WindowRestoreGeometry" o:Freeze="True">M1,3 L1,9 L7,9 L7,3 z M3,1 L3,2 L8,2 L8,7 L9,7 L9,1 z M2,0 L10,0 L10,8 L8,8 L8,10 L0,10 L0,2 L2,2 z</Geometry>
    <Geometry x:Key="WindowMaxGeometry" o:Freeze="True">M1,1 L1,9 L9,9 L9,1 z M0,0 L10,0 L10,10 L0,10 z</Geometry>
    <Geometry x:Key="CheckedGeometry" o:Freeze="True">M 0,2 3,5 8,0</Geometry>
    <Geometry x:Key="AlignLeftGeometry" o:Freeze="True">M0,8 L4,8 4,10 0,10 z M0,4 L8,4 8,6 0,6 z M0,0 L12,0 12,2 0,2 z</Geometry>
    <Geometry x:Key="AlignRightGeometry" o:Freeze="True">M8,8 L12,8 12,10 8,10 z M4,4 L12,4 12,6 4,6 z M0,0 L12,0 12,2 0,2 z</Geometry>
    <Geometry x:Key="AlignHCenterGeometry" o:Freeze="True">M4,8 L8,8 8,10 4,10 z M2,4 L10,4 10,6 2,6 z M0,0 L12,0 12,2 0,2 z</Geometry>
    <Geometry x:Key="AlignHStretchGeometry" o:Freeze="True">M0,8 L12,8 12,10 0,10 z M0,4 L12,4 12,6 0,6 z M0,0 L12,0 12,2 0,2 z</Geometry>
    <Geometry x:Key="AlignTopGeometry" o:Freeze="True">M8,0 L10,0 10,4 8,4 z M4,0 L6,0 6,8 4,8 z M0,0 L2,0 2,12 0,12 z</Geometry>
    <Geometry x:Key="AlignBottomGeometry" o:Freeze="True">M8,8 L10,8 10,12 8,12 z M4,4 L6,4 6,12 4,12 z M0,0 L2,0 2,12 0,12 z</Geometry>
    <Geometry x:Key="AlignVCenterGeometry" o:Freeze="True">M8,4 L10,4 10,8 8,8 z M4,2 L6,2 6,10 4,10 z M0,0 L2,0 2,12 0,12 z</Geometry>
    <Geometry x:Key="AlignVStretchGeometry" o:Freeze="True">M8,0 L10,0 10,12 8,12 z M4,0 L6,0 6,12 4,12 z M0,0 L2,0 2,12 0,12 z</Geometry>
    <Geometry x:Key="PageModeGeometry" o:Freeze="True">M1.0000002,12 L1.0000002,13 11,13 11,12 z M1.0000002,10 L1.0000002,11 11,11 11,10 z M1.0000002,8 L1.0000002,9 11,9 11,8 z M1.0000002,6 L1.0000002,7 11,7 11,6 z M1.0000002,4 L1.0000002,5 11,5 11,4 z M1.0000002,2 L1.0000002,3 11,3 11,2 z M0,0 L12,0 12,14 0,14 z</Geometry>
    <Geometry x:Key="TwoPageModeGeometry" o:Freeze="True">M8.99999988079071,12L8.99999988079071,13 13,13 13,12z M1,12L1,13 5,13 5,12z M9.00000011920929,10L9.00000011920929,11 13,11 13,10z M1,10L1,11 5,11 5,10z M9.00000011920929,8L9.00000011920929,9 13,9 13,8z M1,8L1,9 5,9 5,8z M9.00000011920929,6L9.00000011920929,7 13,7 13,6z M1,6L1,7 5,7 5,6z M9.00000011920929,4L9.00000011920929,5 13,5 13,4z M1,4L1,5 5,5 5,4z M8.99999988079071,2L8.99999988079071,3 13,3 13,2z M1,2L1,3 5,3 5,2z M7.99999994039536,0L14,0 14,14 7.99999994039536,14z M0,0L6,0 6,14 0,14z</Geometry>
    <Geometry x:Key="ScrollModeGeometry" o:Freeze="True">M1,12L1,13 8,13 8,12z M1,10L1,11 8,11 8,10z M1,8L1,9 8,9 8,8z M1,6L1,7 8,7 8,6z M11.0000002384186,5L11.0000002384186,9 13,9 13,5z M1,4L1,5 8,5 8,4z M1,2L1,3 8,3 8,2z M10.0000000298023,0L14,0 14,14 10.0000000298023,14z M0,0L9.00000011920929,0 9.00000011920929,14 0,14z</Geometry>
    <Geometry x:Key="EyeOpenGeometry" o:Freeze="True">M928 406.4c-100.8-137.6-249.6-224-416-224s-315.2 86.4-416 224c-44.8 60.8-44.8 150.4 0 211.2 102.4 137.6 251.2 224 416 224 166.4 0 315.2-86.4 416-224 46.4-60.8 46.4-150.4 0-211.2zM512 721.6c-115.2 0-209.6-94.4-209.6-209.6 0-115.2 94.4-209.6 209.6-209.6 115.2 0 209.6 94.4 209.6 209.6 1.6 115.2-92.8 209.6-209.6 209.6z m0-360c-83.2 0-150.4 67.2-150.4 150.4s67.2 150.4 150.4 150.4 150.4-67.2 150.4-150.4-67.2-150.4-150.4-150.4z m0 0</Geometry>
    <Geometry x:Key="EyeCloseGeometry" o:Freeze="True">M950.4 361.6c8-20.8 0-43.2-19.2-54.4-9.6-4.8-20.8-6.4-32-3.2s-19.2 11.2-24 22.4c-56 132.8-208 228.8-361.6 228.8-155.2 0-307.2-97.6-363.2-232-4.8-11.2-12.8-19.2-24-24-9.6-4.8-20.8-3.2-32 0-20.8 9.6-30.4 35.2-20.8 56 25.6 60.8 67.2 118.4 123.2 164.8l-67.2 70.4c-14.4 16-14.4 40 0 57.6 8 8 17.6 14.4 28.8 14.4s22.4-3.2 30.4-11.2l76.8-81.6c35.2 20.8 73.6 38.4 113.6 49.6l-28.8 83.2c-8 22.4 3.2 46.4 24 54.4 4.8 1.6 9.6 3.2 14.4 3.2 6.4 0 11.2-1.6 17.6-3.2 9.6-4.8 17.6-12.8 22.4-24l33.6-96c41.6 4.8 81.6 3.2 123.2-3.2l32 94.4c3.2 11.2 11.2 19.2 22.4 24 9.6 4.8 20.8 4.8 32 1.6 20.8-8 32-32 24-54.4l-28.8-84.8c30.4-9.6 59.2-22.4 86.4-38.4l62.4 65.6c14.4 16 43.2 16 57.6 0 16-16 16-43.2 0-60.8l-51.2-54.4c56-43.2 100.8-100.8 128-164.8z</Geometry>
    <Geometry x:Key="AudioGeometry" o:Freeze="True">M627.52666696 962L550.66666696 890.47999971c116.82-92.99999971 191.09999971-230.94 191.09999971-385.2 0-146.99999971-67.61999971-279-174.96-371.57999942L643.84666667 62C770.86666638 172.99999971 850.66666667 330.2 850.66666667 505.09999971c0 182.27999971-86.58 345.42-223.13999971 456.90000029zM405.64666638 782l-76.32-77.22a227.88 227.88 0 0 0 116.40000058-199.26A228.06 228.06 0 0 0 347.86666638 317.84000029L422.86666696 242A334.37999971 334.37999971 0 0 1 550.66666696 505.52 334.62 334.62 0 0 1 405.64666638 782zM205.66666638 596.6C164.26666638 596.6 130.66666667 562.51999971 130.66666667 520.64 130.66666667 478.76000029 164.26666638 444.79999971 205.66666638 444.79999971s74.99999971 33.95999971 75.00000058 75.90000058c0 41.87999971-33.59999971 75.84000029-75.00000058 75.83999942z</Geometry>
    <Geometry x:Key="BubbleTailGeometry" o:Freeze="True">M0,0L28,0 28,14.0000006258488 28,15.0010000765324 28.0151405334473,15.0010000765324 28.0455417633057,15.8010965883732C28.4084091186524,22.9596563875675,30.92209815979,29.5507589876652,34.9532623291016,34.9410597383976L34.9984359741211,34.9999815523624 34.0966339111328,34.9885679781437C15.1841707229614,34.5094191133976,2.0535663480814E-07,19.0279375612736,0,0z</Geometry>
    <Geometry x:Key="StarGeometry" o:Freeze="True">M535.9 165.2l96.5 195.4c3.9 7.9 11.4 13.3 20.1 14.6l215.7 31.3c21.9 3.2 30.6 30 14.8 45.5L726.8 604.1c-6.3 6.1-9.1 14.9-7.7 23.6L756 842.5c3.7 21.8-19.1 38.4-38.7 28.1L524.4 769.2c-7.8-4.1-17-4.1-24.8 0L306.7 870.6c-19.6 10.3-42.4-6.3-38.7-28.1l36.8-214.8c1.5-8.6-1.4-17.5-7.7-23.6L141.1 452c-15.8-15.4-7.1-42.3 14.8-45.5l215.7-31.3c8.7-1.3 16.2-6.7 20.1-14.6l96.5-195.4c9.7-19.9 37.9-19.9 47.7 0z</Geometry>
    <Geometry x:Key="AddGeometry" o:Freeze="True">M8,0 C8.5522847,0 9,0.44771525 9,1 L9,7 15,7 C15.552285,7 16,7.4477153 16,8 16,8.5522852 15.552285,9 15,9 L9,9 9,15 C9,15.552285 8.5522847,16 8,16 7.4477153,16 7,15.552285 7,15 L7,9 1,9 C0.44771528,9 0,8.5522852 0,8 0,7.4477153 0.44771528,7 1,7 L7,7 7,1 C7,0.44771525 7.4477153,0 8,0 z</Geometry>
    <Geometry x:Key="RemoveGeometry" o:Freeze="True">M10.899495,0 C11.155417,0 11.411339,0.097630501 11.606602,0.29289246 11.997126,0.68341732 11.997126,1.3165817 11.606602,1.7071066 L7.3639612,5.9497471 11.606602,10.192388 C11.997126,10.582912 11.997126,11.216077 11.606602,11.606601 11.216077,11.997126 10.582912,11.997126 10.192388,11.606601 L5.9497476,7.3639607 1.7071068,11.606601 C1.3165827,11.997126 0.68341756,11.997126 0.29289341,11.606601 -0.097630978,11.216077 -0.097630978,10.582912 0.29289341,10.192388 L4.5355338,5.9497471 0.29289341,1.7071066 C-0.097630978,1.3165817 -0.097630978,0.68341732 0.29289341,0.29289246 0.48815536,0.097630501 0.74407768,0 1,0 1.2559223,0 1.5118446,0.097630501 1.7071068,0.29289246 L5.9497476,4.5355334 10.192388,0.29289246 C10.38765,0.097630501 10.643572,0 10.899495,0 z</Geometry>
    <Geometry x:Key="SubGeometry" o:Freeze="True">M62.5797 488.9508c0.2632 42.5185 34.985 77.2116 77.5035 77.5035l743.0216-0.6728c42.5185 0.3215 76.7437-33.9333 76.4518-76.4805l0 0c-0.2918-42.5175-34.985-77.2106-77.5045-77.5035l-743.0216-0.087C96.513 411.4473 62.2879 446.4323 62.5797 488.9508L62.5797 488.9508z</Geometry>
    <Geometry x:Key="WarningGeometry" o:Freeze="True">M943.644188 827.215696l-351.176649-608.204749c-42.945473-74.36249-113.147387-74.36249-156.092861 0l-351.176649 608.204749c-42.946498 74.431167-7.811716 135.14955 78.012605 135.14955l702.420949 0C951.455904 962.36422 986.555836 901.645838 943.644188 827.215696zM466.187532 391.579035c12.621133-13.644108 28.66175-20.466675 48.233578-20.466675 19.580028 0 35.612444 6.75389 48.241778 20.194018 12.544256 13.473954 18.820484 30.325365 18.820484 50.587035 0 17.430551-26.19759 145.621205-34.929778 238.882082l-63.105666 0c-7.666162-93.259852-36.090106-221.450507-36.090106-238.882082C447.358847 421.938226 453.643275 405.155491 466.187532 391.579035zM561.76804 835.026386c-13.268949 12.928641-29.062535 19.375023-47.345906 19.375023-18.275171 0-34.076957-6.447407-47.346931-19.375023-13.235123-12.89379-19.818859-28.517221-19.818859-46.869269 0-18.249546 6.583736-34.043131 19.818859-47.278254 13.268949-13.235123 29.07176-19.852685 47.346931-19.852685 18.283371 0 34.076957 6.617562 47.345906 19.852685 13.235123 13.235123 19.827059 29.028709 19.827059 47.278254C581.595099 806.51019 575.003163 822.132597 561.76804 835.026386z</Geometry>
    <Geometry x:Key="InfoGeometry" o:Freeze="True">M505.6512 39.0144c-261.2224 3.4816-470.1184 218.112-466.6368 479.4368 3.4816 261.12 218.112 470.1184 479.3344 466.6368 261.2224-3.4816 470.1184-218.112 466.7392-479.3344C981.504 244.4288 766.8736 35.5328 505.6512 39.0144zM558.08 196.608c48.128 0 62.2592 27.9552 62.2592 59.8016 0 39.8336-31.9488 76.6976-86.3232 76.6976-45.568 0-67.1744-22.9376-65.9456-60.8256C468.0704 240.4352 494.7968 196.608 558.08 196.608zM434.7904 807.6288c-32.8704 0-56.9344-19.968-33.8944-107.6224l37.6832-155.5456c6.5536-24.8832 7.68-34.9184 0-34.9184-9.8304 0-52.5312 17.2032-77.7216 34.2016l-16.384-26.9312c79.9744-66.7648 171.8272-105.8816 211.2512-105.8816 32.8704 0 38.2976 38.912 21.9136 98.6112l-43.2128 163.5328c-7.68 28.8768-4.4032 38.912 3.2768 38.912 9.9328 0 42.1888-11.9808 73.9328-36.9664l18.6368 24.8832C552.5504 777.728 467.6608 807.6288 434.7904 807.6288z</Geometry>
    <Geometry x:Key="ErrorGeometry" o:Freeze="True">M495.469714 0C224.621714 0 0 224.621714 0 495.469714c0 270.884571 224.621714 495.506286 495.469714 495.506286 270.884571 0 495.506286-224.621714 495.506286-495.506286C990.976 224.621714 766.354286 0 495.469714 0z m211.419429 634.221714c19.821714 19.821714 19.821714 46.226286 0 66.048s-46.226286 19.821714-66.048 0l-138.752-138.715428-145.334857 145.334857a51.858286 51.858286 0 0 1-72.667429 0 51.858286 51.858286 0 0 1 0-72.667429l145.334857-145.334857-138.752-138.752c-19.821714-19.821714-19.821714-46.226286 0-66.048s46.262857-19.821714 66.084572 0l138.715428 138.715429 145.371429-145.334857a51.858286 51.858286 0 0 1 72.667428 0 51.858286 51.858286 0 0 1 0 72.667428l-145.371428 145.334857 138.752 138.752z</Geometry>
    <Geometry x:Key="SuccessGeometry" o:Freeze="True">M512.66048 64.64c-247.424 0-448 200.57728-448 448s200.576 448 448 448 448-200.57728 448-448c0-247.424-200.57728-448-448-448z m250.71232 334.86336L480.98176 681.89312c-15.49568 15.49696-40.61952 15.49696-56.11648 0l-162.9184-162.9184c-15.49568-15.49568-15.49568-40.61824 0-56.1152s40.61952-15.49568 56.11648 0l134.85952 134.85952L707.25504 343.3856c15.49568-15.49568 40.61952-15.49568 56.11648 0s15.49696 40.6208 0.00128 56.11776z</Geometry>
    <Geometry x:Key="FatalGeometry" o:Freeze="True">M716.8 375.466667l34.133333 34.133333c17.066667 17.066667 42.666667 17.066667 59.733334 0 17.066667-17.066667 17.066667-42.666667 0-59.733333l-34.133334-34.133334 34.133334-34.133333c17.066667-17.066667 17.066667-42.666667 0-59.733333-17.066667-17.066667-42.666667-17.066667-59.733334 0l-34.133333 34.133333-34.133333-34.133333c-17.066667-17.066667-42.666667-17.066667-59.733334 0-17.066667 17.066667-17.066667 42.666667 0 59.733333l34.133334 34.133333-34.133334 34.133334c-17.066667 17.066667-17.066667 42.666667 0 59.733333 17.066667 17.066667 42.666667 17.066667 59.733334 0l34.133333-34.133333z m-426.666667 0l34.133334 34.133333c17.066667 17.066667 42.666667 17.066667 59.733333 0 17.066667-17.066667 17.066667-42.666667 0-59.733333l-34.133333-34.133334 34.133333-34.133333c17.066667-17.066667 17.066667-42.666667 0-59.733333-17.066667-17.066667-42.666667-17.066667-59.733333 0l-34.133334 34.133333-34.133333-34.133333c-17.066667-17.066667-42.666667-17.066667-59.733333 0-17.066667 17.066667-17.066667 42.666667 0 59.733333l34.133333 34.133333-34.133333 34.133334c-17.066667 17.066667-17.066667 42.666667 0 59.733333 17.066667 17.066667 42.666667 17.066667 59.733333 0l34.133333-34.133333zM0 85.333333c0-51.2 42.666667-85.333333 85.333333-85.333333h853.333334c51.2 0 85.333333 42.666667 85.333333 85.333333v853.333334c0 51.2-42.666667 85.333333-85.333333 85.333333H85.333333c-51.2 0-85.333333-42.666667-85.333333-85.333333V85.333333z m512 469.333334c-136.533333 0-230.4 68.266667-290.133333 196.266666-8.533333 17.066667 0 42.666667 17.066666 59.733334s42.666667 0 59.733334-17.066667c51.2-93.866667 110.933333-145.066667 221.866666-145.066667 102.4 0 170.666667 51.2 221.866667 145.066667 8.533333 17.066667 34.133333 25.6 59.733333 17.066667 17.066667-8.533333 25.6-34.133333 17.066667-59.733334-76.8-128-170.666667-196.266667-307.2-196.266666z</Geometry>
    <Geometry x:Key="AskGeometry" o:Freeze="True">M512 0 30.11843 240.941297l0 542.117406 481.88157 240.941297 481.88157-240.941297L993.88157 240.941297 512 0zM575.776472 768.799969 460.188012 768.799969 460.188012 656.222073l115.588459 0L575.776472 768.799969zM623.335603 509.329685c-52.375829 36.723353-59.600363 55.988096-59.600363 84.885211l0 19.866447L468.616977 614.081343l0-26.489278c0-45.754021 13.846342-80.67124 61.406497-116.791866 46.957428-36.723353 57.79423-62.0082 57.79423-84.282484 0-25.284848-21.67258-54.181962-55.386393-54.181962-42.743457 0-70.436142 26.489278-82.477374 85.486914l-105.956088-21.67258c24.683144-111.976192 82.477374-157.127486 205.289345-157.127486 98.12985 0 157.72919 63.212631 157.72919 131.842639C707.017407 423.240044 688.956071 461.76953 623.335603 509.329685z</Geometry>
    <Geometry x:Key="AllGeometry" o:Freeze="True">M 721.005 638.949 C 758.74 638.949 789.333 669.56 789.333 707.312 C 789.333 745.047 758.74 775.657 721.005 775.657 C 683.253 775.657 652.66 745.047 652.66 707.312 C 652.66 669.56 683.253 638.949 721.005 638.949 Z M 512.017 638.949 C 549.77 638.949 580.38 669.56 580.38 707.312 C 580.38 745.047 549.77 775.657 512.017 775.657 C 474.265 775.657 443.672 745.047 443.672 707.312 C 443.672 669.56 474.265 638.949 512.017 638.949 Z M 303.029 638.949 C 340.781 638.949 371.392 669.56 371.392 707.312 C 371.392 745.047 340.781 775.657 303.029 775.657 C 265.277 775.657 234.667 745.047 234.667 707.312 C 234.667 669.56 265.277 638.949 303.029 638.949 Z M 721.005 443.655 C 758.74 443.655 789.333 474.265 789.333 512.017 C 789.333 549.769 758.74 580.363 721.005 580.363 C 683.253 580.363 652.66 549.769 652.66 512.017 C 652.66 474.265 683.253 443.655 721.005 443.655 Z M 512.017 443.655 C 549.77 443.655 580.38 474.265 580.38 512.017 C 580.38 549.769 549.77 580.363 512.017 580.363 C 474.265 580.363 443.672 549.769 443.672 512.017 C 443.672 474.265 474.265 443.655 512.017 443.655 Z M 303.029 443.655 C 340.781 443.655 371.392 474.265 371.392 512.017 C 371.392 549.769 340.781 580.363 303.029 580.363 C 265.277 580.363 234.667 549.769 234.667 512.017 C 234.667 474.265 265.277 443.655 303.029 443.655 Z M 721.005 248.343 C 758.74 248.343 789.333 278.953 789.333 316.688 C 789.333 354.44 758.74 385.051 721.005 385.051 C 683.253 385.051 652.66 354.44 652.66 316.688 C 652.66 278.953 683.253 248.343 721.005 248.343 Z M 512.017 248.343 C 549.77 248.343 580.38 278.953 580.38 316.688 C 580.38 354.44 549.77 385.051 512.017 385.051 C 474.265 385.051 443.672 354.44 443.672 316.688 C 443.672 278.953 474.265 248.343 512.017 248.343 Z M 303.029 248.343 C 340.781 248.343 371.392 278.953 371.392 316.688 C 371.392 354.44 340.781 385.051 303.029 385.051 C 265.277 385.051 234.667 354.44 234.667 316.688 C 234.667 278.953 265.277 248.343 303.029 248.343 Z</Geometry>
    <Geometry x:Key="DragVerticalGeometry" o:Freeze="True">M2,12 C3.1045694,12 4,12.895431 4,14 4,15.104569 3.1045694,16 2,16 0.89543051,16 0,15.104569 0,14 0,12.895431 0.89543051,12 2,12 z M2,6 C3.1045694,6 4,6.8954306 4,8 4,9.1045694 3.1045694,10 2,10 0.89543051,10 0,9.1045694 0,8 0,6.8954306 0.89543051,6 2,6 z M2,0 C3.1045694,0 4,0.89543056 4,2 4,3.1045694 3.1045694,4 2,4 0.89543051,4 0,3.1045694 0,2 0,0.89543056 0.89543051,0 2,0 z</Geometry>
    <Geometry x:Key="DragHorizontalGeometry" o:Freeze="True">M14,0 C15.104569,0 16,0.89543051 16,2 16,3.1045694 15.104569,4 14,4 12.895431,4 12,3.1045694 12,2 12,0.89543051 12.895431,0 14,0 z M8,0 C9.1045694,0 10,0.89543051 10,2 10,3.1045694 9.1045694,4 8,4 6.8954306,4 6,3.1045694 6,2 6,0.89543051 6.8954306,0 8,0 z M2,0 C3.1045694,0 4,0.89543051 4,2 4,3.1045694 3.1045694,4 2,4 0.89543056,4 0,3.1045694 0,2 0,0.89543051 0.89543056,0 2,0 z</Geometry>
    <Geometry x:Key="DropperGeometry" o:Freeze="True">M798.165333 97.834667a42.624 42.624 0 0 0-60.330666 0l-140.629334 140.629333-55.381333-55.296-60.330667 60.330667 55.381334 55.296-353.706667 353.706666a42.709333 42.709333 0 0 0-11.221333 19.84l-42.666667 170.666667a42.538667 42.538667 0 0 0 51.712 51.712l170.666667-42.666667c7.509333-1.877333 14.378667-5.76 19.84-11.221333l353.792-353.792 55.210666 55.125333 60.330667-60.330666-55.210667-55.125334 140.544-140.544a42.624 42.624 0 0 0 0-60.330666l-128-128zM319.488 772.138667l-90.197333 22.570666 22.570666-90.197333 345.386667-345.386667 67.669333 67.584-345.429333 345.429334z</Geometry>

    <!--  endregion  -->

    <!--  region Path  -->
    <!--  Path  YES  -->
    <Style x:Key="PathBaseStyle" TargetType="Path">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
    </Style>

    <!--  搜索  -->
    <Style
        x:Key="SearchPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource SearchGeometry}" />
    </Style>

    <!--  全屏返回  -->
    <Style
        x:Key="FullScreenReturnPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource FullScreenReturnGeometry}" />
    </Style>

    <!--  全屏  -->
    <Style
        x:Key="FullScreenPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource FullScreenGeometry}" />
    </Style>

    <!--  windows  -->
    <Style
        x:Key="WindowsPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource WindowsGeometry}" />
    </Style>

    <!--  保存  -->
    <Style
        x:Key="SavePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource SaveGeometry}" />
    </Style>

    <!--  下载  -->
    <Style
        x:Key="DownloadPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource DownloadGeometry}" />
    </Style>

    <!--  放大  -->
    <Style
        x:Key="EnlargePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource EnlargeGeometry}" />
    </Style>

    <!--  缩小  -->
    <Style
        x:Key="ReducePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource ReduceGeometry}" />
    </Style>

    <!--  向左旋转  -->
    <Style
        x:Key="RotatePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource RotateLeftGeometry}" />
    </Style>

    <!--  日历  -->
    <Style
        x:Key="CalendarPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource CalendarGeometry}" />
    </Style>

    <!--  删除  -->
    <Style
        x:Key="DeletePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource DeleteGeometry}" />
    </Style>

    <!--  关闭  -->
    <Style
        x:Key="ClosePathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource CloseGeometry}" />
    </Style>

    <!--  下  -->
    <Style
        x:Key="DownPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource DownGeometry}" />
    </Style>

    <!--  时钟  -->
    <Style
        x:Key="ClockPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource ClockGeometry}" />
    </Style>

    <!--  向左  -->
    <Style
        x:Key="LeftPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource LeftGeometry}" />
    </Style>

    <!--  向右  -->
    <Style
        x:Key="RightPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1" ScaleY="1" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Data" Value="{StaticResource LeftGeometry}" />
    </Style>

    <!--  上和下的组合  -->
    <Style
        x:Key="UpDownPathStyle"
        BasedOn="{StaticResource PathBaseStyle}"
        TargetType="Path">
        <Setter Property="Data" Value="{StaticResource UpDownGeometry}" />
    </Style>
    <!--  endregion  -->

    <!--  region Size  -->
    <!--  Size  YES  -->
    <system:Double x:Key="DefaultControlHeight">28</system:Double>
    <system:Double x:Key="SmallControlHeight">20</system:Double>
    <Thickness x:Key="DefaultControlPadding">10,5</Thickness>
    <Thickness x:Key="DefaultInputPadding">8,0</Thickness>
    <CornerRadius x:Key="DefaultCornerRadius">4</CornerRadius>
    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">30</system:Double>
    <!--  endregion  -->

    <!--  region Converter  -->
    <!--  Converter  -->
    <converter:Double2GridLengthConverter x:Key="Double2GridLengthConverter" />
    <converter:String2VisibilityConverter x:Key="String2VisibilityConverter" />
    <converter:String2VisibilityReConverter x:Key="String2VisibilityReConverter" />
    <converter:ThicknessSplitConverter x:Key="ThicknessSplitConverter" />
    <BooleanToVisibilityConverter x:Key="Boolean2VisibilityConverter" />
    <converter:BorderCircularConverter x:Key="BorderCircularConverter" />
    <converter:BorderCircularClipConverter x:Key="BorderCircularClipConverter" />
    <!--  endregion  -->
    <!--  控件样式  -->
    <!--  region BaseStyle  -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        RadiusX="4"
                        RadiusY="4"
                        Style="{StaticResource RectangleFocusVisual}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusVisualRadius0">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Style="{StaticResource RectangleFocusVisual}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisualMargin0">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Opacity=".6"
                        RadiusX="4"
                        RadiusY="4"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource SecondaryBorderBrush}"
                        StrokeDashArray="1 1"
                        StrokeThickness="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisualRadius0Margin0">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Opacity=".6"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource SecondaryBorderBrush}"
                        StrokeDashArray="1 1"
                        StrokeThickness="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InputElementBaseStyle" TargetType="Control">
        <Setter Property="ym:TitleElement.MarginOnTheLeft" Value="0,7,6,0" />
        <Setter Property="ym:TitleElement.MarginOnTheTop" Value="8,0,0,5" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource InputElementErrorTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseStyle" TargetType="Control">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
    </Style>
    <!--  endregion  -->

    <!--  region Border  -->
    <!--  Border  YES  -->
    <Style x:Key="BorderRegion" TargetType="Border">
        <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    </Style>

    <Style x:Key="BorderTipBaseStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="5,0,0,0" />
    </Style>

    <Style
        x:Key="BorderTipPrimary"
        BasedOn="{StaticResource BorderTipBaseStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="BorderTipDanger"
        BasedOn="{StaticResource BorderTipBaseStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightDangerBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style
        x:Key="BorderTipWarning"
        BasedOn="{StaticResource BorderTipBaseStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightWarningBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="BorderTipInfo"
        BasedOn="{StaticResource BorderTipBaseStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightInfoBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="BorderTipSuccess"
        BasedOn="{StaticResource BorderTipBaseStyle}"
        TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource LightSuccessBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style x:Key="BorderVerticallySplitter" TargetType="Border">
        <Setter Property="Width" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource ThirdlyTextBrush}" />
    </Style>

    <Style x:Key="BorderHorizontallySplitter" TargetType="Border">
        <Setter Property="Height" Value="1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{DynamicResource ThirdlyTextBrush}" />
    </Style>

    <Style x:Key="BorderClip" TargetType="Border">
        <Setter Property="Clip">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderCircular" TargetType="Border">
        <Setter Property="ym:BorderElement.Circular" Value="True" />
    </Style>
    <Style
        x:Key="BorderCircularClip"
        BasedOn="{StaticResource BorderCircular}"
        TargetType="Border">
        <Setter Property="Clip">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BorderCircularClipConverter}">
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  endregion  -->

    <!--  region TextBlock  -->
    <!--  TextBlock  YES  -->
    <Style x:Key="TextBlockBaseStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
    </Style>

    <Style
        x:Key="TextBlockBoldBaseStyle"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="TextBlockDefault"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock" />
    <Style
        x:Key="TextBlockDefaultAccent"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultPrimary"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultDanger"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultWarning"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultInfo"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultSuccess"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultSecLight"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultThiLight"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
    </Style>

    <Style
        x:Key="TextBlockLarge"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
    </Style>
    <Style
        x:Key="TextBlockTitle"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource HeadFontSize}" />
    </Style>
    <Style
        x:Key="TextBlockSubTitle"
        BasedOn="{StaticResource TextBlockBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource SubHeadFontSize}" />
    </Style>

    <Style
        x:Key="TextBlockLargeBold"
        BasedOn="{StaticResource TextBlockBoldBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource LargeFontSize}" />
    </Style>
    <Style
        x:Key="TextBlockTitleBold"
        BasedOn="{StaticResource TextBlockBoldBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource HeadFontSize}" />
    </Style>
    <Style
        x:Key="TextBlockSubTitleBold"
        BasedOn="{StaticResource TextBlockBoldBaseStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource SubHeadFontSize}" />
    </Style>
    <Style
        x:Key="TextBlockDefaultBold"
        BasedOn="{StaticResource TextBlockBoldBaseStyle}"
        TargetType="TextBlock" />

    <!--  endregion  -->

    <!--  region CheckBox  -->
    <!--  CheckBox  YES  -->
    <Style
        x:Key="CheckBoxBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="CheckBox">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="-4"
                                    Opacity=".6"
                                    RadiusX="4"
                                    RadiusY="4"
                                    SnapsToDevicePixels="true"
                                    Stroke="{DynamicResource SecondaryBorderBrush}"
                                    StrokeDashArray="1 1"
                                    StrokeThickness="2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardCheckedTrue">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardCheckedFalse">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Width="16"
                            Height="16"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2" />
                        <ym:SimplePanel
                            x:Name="markGrid"
                            Grid.Column="0"
                            Width="16"
                            Height="16">
                            <Path
                                x:Name="path"
                                Width="12"
                                Height="12"
                                Data="{StaticResource CheckedGeometry}"
                                FlowDirection="LeftToRight"
                                Stretch="Uniform"
                                Stroke="{DynamicResource TextIconBrush}"
                                StrokeDashArray="8,8"
                                StrokeDashOffset="8"
                                StrokeThickness="2"
                                UseLayoutRounding="True" />
                            <Rectangle
                                x:Name="indeterminateMark"
                                Margin="2"
                                Fill="{DynamicResource PrimaryBrush}"
                                Opacity="0"
                                RadiusX="2"
                                RadiusY="2" />
                        </ym:SimplePanel>
                        <Border
                            x:Name="border"
                            Width="16"
                            Height="16"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value=".8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}" />
                            </Trigger.ExitActions>
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DarkPrimaryBrush}" />
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="path" Property="Stroke" Value="{DynamicResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource CheckBoxBaseStyle}" TargetType="CheckBox" />
    <!--  endregion  -->

    <!--  region Label  -->
    <!--  Label YES  -->
    <Style x:Key="LabelBaseStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="LabelDefault"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style BasedOn="{StaticResource LabelDefault}" TargetType="Label" />

    <Style
        x:Key="LabelDefault.Small"
        BasedOn="{StaticResource LabelDefault}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="LabelPrimary"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="LabelPrimary.Small"
        BasedOn="{StaticResource LabelPrimary}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="LabelSuccess"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style
        x:Key="LabelSuccess.Small"
        BasedOn="{StaticResource LabelSuccess}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="LabelInfo"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="LabelInfo.Small"
        BasedOn="{StaticResource LabelInfo}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="LabelWarning"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="LabelWarning.Small"
        BasedOn="{StaticResource LabelWarning}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="LabelDanger"
        BasedOn="{StaticResource LabelBaseStyle}"
        TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style
        x:Key="LabelDanger.Small"
        BasedOn="{StaticResource LabelDanger}"
        TargetType="Label">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <!--  endregion  -->

    <!--  region Button  -->
    <!--  Button  YES  -->
    <!--  region BaseBase  -->
    <Style
        x:Key="ButtonBaseBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="ButtonBase">
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--  endregion  -->

    <!--  region Base  -->
    <Style
        x:Key="ButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="Button">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ym:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}" />
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}">
                            <StackPanel
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Orientation="Horizontal">
                                <Path
                                    x:Name="PathMain"
                                    Width="{TemplateBinding ym:IconElement.Width}"
                                    Height="{TemplateBinding ym:IconElement.Height}"
                                    Data="{TemplateBinding ym:IconElement.Geometry}"
                                    Fill="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    x:Name="ContentPresenterMain"
                                    Margin="6,0,0,0"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ym:IconElement.Geometry" Value="{x:Null}">
                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  endregion  -->

    <!--  region Button  -->
    <Style
        x:Key="ButtonDefault"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource ButtonDefault}" TargetType="Button" />

    <Style
        x:Key="ButtonPrimary"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="ButtonSuccess"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style
        x:Key="ButtonInfo"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="ButtonWarning"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="ButtonDanger"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style
        x:Key="ButtonCustom"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(ym:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value=".6" />
                            <Setter TargetName="Chrome" Property="Background" Value="{Binding Path=(ym:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  endregion  -->

    <!--  region ButtonIcon  -->
    <Style
        x:Key="ButtonIcon"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}">
                        <ContentControl
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Path
                                Width="{TemplateBinding ym:IconElement.Width}"
                                Height="{TemplateBinding ym:IconElement.Height}"
                                Data="{TemplateBinding ym:IconElement.Geometry}"
                                Fill="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True"
                                Stretch="Uniform" />
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  endregion  -->

    <!--  endregion  -->

    <!--  region RadioButton  -->
    <!--  RadioButton  YES  -->
    <!--  Base  -->
    <Style
        x:Key="RadioButtonBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="RadioButton">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="-4"
                                    Opacity=".6"
                                    RadiusX="4"
                                    RadiusY="4"
                                    SnapsToDevicePixels="true"
                                    Stroke="{DynamicResource SecondaryBorderBrush}"
                                    StrokeDashArray="1 1"
                                    StrokeThickness="2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardCheckedTrue">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardCheckedFalse">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="optionMark" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border
                            Width="16"
                            Height="16"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8">
                            <Ellipse
                                x:Name="optionMark"
                                Grid.Column="0"
                                Width="8"
                                Height="8"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="White"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0" ScaleY="0" />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Border>
                        <Border
                            x:Name="border"
                            Grid.Column="0"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" Value=".8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="false" />
                                <Condition Property="IsPressed" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}" />
                            </Trigger.ExitActions>
                            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DarkPrimaryBrush}" />
                            <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="RadioButtonIconBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="RadioButton">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="0" />
        <Setter Property="ym:VisualElement.HighlightBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}">
                        <Border
                            Name="BorderHighlight"
                            BorderBrush="Transparent"
                            BorderThickness="3,0,0,0">
                            <StackPanel
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Orientation="Horizontal">
                                <Path
                                    x:Name="PathMain"
                                    Width="{Binding Path=(ym:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                    Height="{Binding Path=(ym:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                    Data="{TemplateBinding ym:IconElement.Geometry}"
                                    Fill="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    x:Name="ContentPresenterMain"
                                    Margin="6,0,0,0"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ym:IconElement.Geometry" Value="{x:Null}">
                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BorderHighlight" Property="BorderBrush" Value="{Binding Path=(ym:VisualElement.HighlightBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="RadioButton" />

    <Style
        x:Key="RadioButtonIcon"
        BasedOn="{StaticResource RadioButtonIconBaseStyle}"
        TargetType="RadioButton" />

    <Style
        x:Key="RadioButtonIcon.Small"
        BasedOn="{StaticResource RadioButtonIcon}"
        TargetType="RadioButton">
        <Setter Property="Height" Value="20" />
        <Setter Property="Padding" Value="6,1" />
        <Setter Property="ym:IconElement.Height" Value="12" />
    </Style>
    <!--  endregion  -->

    <!--  region ToggleButton  -->
    <!--  ToggleButton  YES  -->
    <!--  Base  -->
    <Style
        x:Key="ToggleButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ym:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Orientation="Horizontal">
                                <Path
                                    x:Name="PathMain"
                                    Width="{TemplateBinding ym:IconElement.Width}"
                                    Height="{TemplateBinding ym:IconElement.Height}"
                                    Data="{TemplateBinding ym:IconElement.Geometry}"
                                    Fill="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform" />
                                <ContentPresenter
                                    x:Name="ContentPresenterMain"
                                    Margin="6,0,0,0"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                        <Border
                            x:Name="BorderChecked"
                            Margin="-1"
                            BorderBrush="{DynamicResource DarkMaskBrush}"
                            BorderThickness="4"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed" />
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="BorderChecked" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenterMain" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ym:IconElement.Geometry" Value="{x:Null}">
                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterMain" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ToggleButtonIconBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
        <Setter Property="Width" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Height" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="ym:IconSwitchElement.Geometry" Value="{x:Null}" />
        <Setter Property="ym:IconSwitchElement.GeometrySelected" Value="{x:Null}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ym:SimplePanel>
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentControl
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Path
                                    x:Name="PathIcon"
                                    Width="{TemplateBinding ym:IconElement.Width}"
                                    Height="{TemplateBinding ym:IconElement.Height}"
                                    Data="{TemplateBinding ym:IconSwitchElement.Geometry}"
                                    Fill="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform" />
                            </ContentControl>
                        </Border>
                        <Border
                            x:Name="BorderChecked"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="4"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed" />
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PathIcon" Property="Data" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ym:IconSwitchElement.GeometrySelected)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ToggleButtonSwitchBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Style="{StaticResource RectangleFocusVisualCircular}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ym:VisualElement.HighlightBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="ym:VisualElement.HighlightForeground" Value="{DynamicResource SecondaryBorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="32">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="lightBorder" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="innerBorder" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardUnChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="lightBorder" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="innerBorder" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Viewbox>
                            <ym:SimplePanel Width="80" Height="48">
                                <Border
                                    Name="innerBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="24">
                                    <ym:ToggleBlock
                                        Margin="0,0,12,0"
                                        HorizontalAlignment="Right"
                                        IsChecked="{Binding Path=(ym:ToggleButtonAttach.ShowLabel), RelativeSource={RelativeSource TemplatedParent}}">
                                        <ym:ToggleBlock.CheckedContent>
                                            <Ellipse
                                                Width="16"
                                                Height="16"
                                                Stroke="{Binding Path=(ym:VisualElement.HighlightForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                StrokeThickness="2" />
                                        </ym:ToggleBlock.CheckedContent>
                                    </ym:ToggleBlock>
                                </Border>
                                <Border
                                    x:Name="lightBorder"
                                    Background="{Binding Path=(ym:VisualElement.HighlightBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="24"
                                    Opacity="0">
                                    <ym:ToggleBlock
                                        Margin="18,0,0,0"
                                        HorizontalAlignment="Left"
                                        IsChecked="{Binding Path=(ym:ToggleButtonAttach.ShowLabel), RelativeSource={RelativeSource TemplatedParent}}">
                                        <ym:ToggleBlock.CheckedContent>
                                            <Rectangle
                                                Width="3"
                                                Height="16"
                                                Fill="{DynamicResource TextIconBrush}"
                                                RadiusX="1.5"
                                                RadiusY="1.5" />
                                        </ym:ToggleBlock.CheckedContent>
                                    </ym:ToggleBlock>
                                </Border>
                                <Border
                                    Name="thumb"
                                    Width="44"
                                    Height="44"
                                    Margin="2"
                                    HorizontalAlignment="Left"
                                    Background="White"
                                    CornerRadius="22"
                                    Effect="{StaticResource EffectShadow2}"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </ym:SimplePanel>
                        </Viewbox>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardChecked}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardUnChecked}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  图标  -->
    <Style
        x:Key="ToggleButtonIcon"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ToggleButtonIconPrimary"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="ToggleButtonIconSuccess"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style
        x:Key="ToggleButtonIconInfo"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="ToggleButtonIconWarning"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="ToggleButtonIconDanger"
        BasedOn="{StaticResource ToggleButtonIconBaseStyle}"
        TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
    </Style>

    <!--  开关  -->
    <Style
        x:Key="ToggleButtonSwitch"
        BasedOn="{StaticResource ToggleButtonSwitchBaseStyle}"
        TargetType="ToggleButton" />

    <Style
        x:Key="ToggleButtonSwitch.Small"
        BasedOn="{StaticResource ToggleButtonSwitch}"
        TargetType="ToggleButton">
        <Setter Property="Height" Value="16" />
    </Style>
    <!--  endregion  -->

    <!--  region TextBox  -->
    <!--  TextBox YES  -->
    <!--  Base  -->
    <Style
        x:Key="TextBoxBaseStyle"
        BasedOn="{StaticResource InputElementBaseStyle}"
        TargetType="TextBox">
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ym:SimplePanel x:Name="root">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                            SnapsToDevicePixels="True" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="-2,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="root" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TextBoxExtendTopTemplate" TargetType="TextBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(ym:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Margin="{TemplateBinding ym:TitleElement.MarginOnTheTop}"
                HorizontalAlignment="{TemplateBinding ym:TitleElement.HorizontalAlignment}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{TemplateBinding ym:InfoElement.Symbol}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{TemplateBinding ym:InfoElement.Title}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="border"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                SnapsToDevicePixels="True" />
            <TextBlock
                x:Name="Placeholder"
                Grid.Row="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{StaticResource TextBlockDefaultThiLight}"
                Text="{TemplateBinding ym:InfoElement.Placeholder}"
                Visibility="{TemplateBinding Text,
                                             Converter={StaticResource String2VisibilityReConverter}}" />
            <ScrollViewer
                x:Name="PART_ContentHost"
                Grid.Row="1"
                Margin="-2,0"
                Padding="{TemplateBinding Padding}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="false"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.4" />
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="PART_ContentHost" Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxExtendLeftTemplate" TargetType="TextBox">
        <Grid Height="{TemplateBinding ym:InfoElement.ContentHeight}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{TemplateBinding ym:InfoElement.TitleWidth}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="{TemplateBinding ym:TitleElement.MarginOnTheLeft}"
                HorizontalAlignment="{TemplateBinding ym:TitleElement.HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding ym:TitleElement.VerticalAlignment}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{TemplateBinding ym:InfoElement.Symbol}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{TemplateBinding ym:InfoElement.Title}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="border"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                SnapsToDevicePixels="True" />
            <TextBlock
                x:Name="Placeholder"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{StaticResource TextBlockDefaultThiLight}"
                Text="{TemplateBinding ym:InfoElement.Placeholder}"
                Visibility="{TemplateBinding Text,
                                             Converter={StaticResource String2VisibilityReConverter}}" />
            <ScrollViewer
                x:Name="PART_ContentHost"
                Grid.Column="1"
                Margin="-2,0"
                Padding="{TemplateBinding Padding}"
                Focusable="false"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.4" />
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="PART_ContentHost" Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="TextBoxExtendBaseStyle"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="TextBox">
        <Setter Property="ym:InfoElement.Symbol" Value="●" />
        <Setter Property="ym:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="ym:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource TextBoxExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="ym:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource TextBoxExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource TextBoxBaseStyle}" TargetType="TextBox" />

    <Style
        x:Key="TextBox.Small"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="TextBox">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>

    <Style
        x:Key="TextBoxExtend"
        BasedOn="{StaticResource TextBoxExtendBaseStyle}"
        TargetType="TextBox" />

    <Style
        x:Key="TextBoxExtend.Small"
        BasedOn="{StaticResource TextBoxExtend}"
        TargetType="TextBox">
        <Setter Property="ym:InfoElement.MinContentHeight" Value="20" />
        <Setter Property="ym:InfoElement.ContentHeight" Value="20" />
        <Setter Property="ym:TitleElement.MarginOnTheLeft" Value="0,3,6,0" />
        <Setter Property="ym:TitleElement.MarginOnTheTop" Value="6,0,0,1" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="MinHeight" Value="20" />
    </Style>
    <!--  endregion  -->

    <!--  region ComboBox  -->
    <!--  ComboBox  YES  -->
    <!--  Base  -->

    <!--  默认下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="border"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}" />
            <ym:ToggleBlock
                Grid.Column="1"
                Padding="1,0"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Background="Transparent"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ym:ToggleBlock.UnCheckedContent>
                    <Path
                        Width="14"
                        Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Data="{StaticResource DownGeometry}"
                        Fill="{TemplateBinding BorderBrush}"
                        Stretch="Uniform" />
                </ym:ToggleBlock.UnCheckedContent>
                <ym:ToggleBlock.CheckedContent>
                    <Path
                        Width="14"
                        Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Data="{StaticResource UpGeometry}"
                        Fill="{TemplateBinding BorderBrush}"
                        Stretch="Uniform" />
                </ym:ToggleBlock.CheckedContent>
            </ym:ToggleBlock>
            <ym:ToggleBlock
                Grid.Column="0"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Background="Transparent"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                ToggleGesture="LeftClick" />
            <ContentPresenter
                x:Name="contentPresenter"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Popup
                x:Name="PART_Popup"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=border}"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Decorator Margin="8,0">
                    <Border
                        x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=border}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Margin="0,0,0,8"
                        Background="{DynamicResource RegionBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,1,0,0"
                        CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                        Effect="{StaticResource EffectShadow2}">
                        <ym:ToggleBlock
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ym:ToggleBlock.CheckedContent>
                                <ScrollViewer Margin="2">
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </ym:ToggleBlock.CheckedContent>
                            <ym:ToggleBlock.UnCheckedContent>
                                <ym:Empty />
                            </ym:ToggleBlock.UnCheckedContent>
                        </ym:ToggleBlock>
                    </Border>
                </Decorator>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  标题在顶部的下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxTopTemplate" TargetType="ComboBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(ym:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Margin="{TemplateBinding ym:TitleElement.MarginOnTheTop}"
                HorizontalAlignment="{TemplateBinding ym:TitleElement.HorizontalAlignment}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{TemplateBinding ym:InfoElement.Symbol}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{TemplateBinding ym:InfoElement.Title}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="contentPanel" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}" />
                <TextBlock
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Style="{StaticResource TextBlockDefaultThiLight}"
                    Text="{TemplateBinding ym:InfoElement.Placeholder}"
                    Visibility="{TemplateBinding Text,
                                                 Converter={StaticResource String2VisibilityReConverter}}" />
                <ym:ToggleBlock
                    Grid.Column="1"
                    Padding="1,0"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick">
                    <ym:ToggleBlock.UnCheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.UnCheckedContent>
                    <ym:ToggleBlock.CheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource UpGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.CheckedContent>
                </ym:ToggleBlock>
                <ym:ToggleBlock
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup
                    x:Name="PART_Popup"
                    Margin="1"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Decorator Margin="8,0">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ActualWidth, ElementName=border}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0,0,0,8"
                            Background="{DynamicResource RegionBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0,1,0,0"
                            CornerRadius="{TemplateBinding ym:BorderElement.CornerRadius}"
                            Effect="{StaticResource EffectShadow2}">
                            <ym:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <ym:ToggleBlock.CheckedContent>
                                    <ScrollViewer Margin="2">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </ym:ToggleBlock.CheckedContent>
                                <ym:ToggleBlock.UnCheckedContent>
                                    <ym:Empty />
                                </ym:ToggleBlock.UnCheckedContent>
                            </ym:ToggleBlock>
                        </Border>
                    </Decorator>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="contentPanel" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPanel" Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  标题在左侧的下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxLeftTemplate" TargetType="ComboBox">
        <Grid Height="{Binding Path=(ym:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(ym:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="{Binding Path=(ym:TitleElement.MarginOnTheLeft), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(ym:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(ym:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(ym:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="contentPanel" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Style="{StaticResource TextBlockDefaultThiLight}"
                    Text="{Binding Path=(ym:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{TemplateBinding Text,
                                                 Converter={StaticResource String2VisibilityReConverter}}" />
                <ym:ToggleBlock
                    Grid.Column="1"
                    Padding="1,0"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick">
                    <ym:ToggleBlock.UnCheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.UnCheckedContent>
                    <ym:ToggleBlock.CheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource UpGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.CheckedContent>
                </ym:ToggleBlock>
                <ym:ToggleBlock
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    Grid.Column="0"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Popup
                    x:Name="PART_Popup"
                    Margin="1"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Decorator Margin="8,0">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ActualWidth, ElementName=border}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0,0,0,8"
                            Background="{DynamicResource RegionBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0,1,0,0"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Effect="{StaticResource EffectShadow2}">
                            <ym:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <ym:ToggleBlock.CheckedContent>
                                    <ScrollViewer Margin="2">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </ym:ToggleBlock.CheckedContent>
                                <ym:ToggleBlock.UnCheckedContent>
                                    <ym:Empty />
                                </ym:ToggleBlock.UnCheckedContent>
                            </ym:ToggleBlock>
                        </Border>
                    </Decorator>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="contentPanel" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPanel" Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  可编辑下拉框中的输入框  -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Margin="-2,0,0,0"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  默认可编辑下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="ComboBox">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="border"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
            <ym:ToggleBlock
                Grid.Column="1"
                Padding="1,0"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Background="Transparent"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                ToggleGesture="LeftClick">
                <ym:ToggleBlock.UnCheckedContent>
                    <Path
                        Width="14"
                        Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Data="{StaticResource DownGeometry}"
                        Fill="{TemplateBinding BorderBrush}"
                        Stretch="Uniform" />
                </ym:ToggleBlock.UnCheckedContent>
                <ym:ToggleBlock.CheckedContent>
                    <Path
                        Width="14"
                        Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Data="{StaticResource UpGeometry}"
                        Fill="{TemplateBinding BorderBrush}"
                        Stretch="Uniform" />
                </ym:ToggleBlock.CheckedContent>
            </ym:ToggleBlock>
            <TextBox
                x:Name="PART_EditableTextBox"
                Grid.Column="0"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxEditableTextBox}" />
            <Popup
                x:Name="PART_Popup"
                Margin="1"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=border}"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Decorator Margin="8,0">
                    <Border
                        x:Name="dropDownBorder"
                        MinWidth="{Binding ActualWidth, ElementName=border}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Margin="0,0,0,8"
                        Background="{DynamicResource RegionBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,1,0,0"
                        CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        Effect="{StaticResource EffectShadow2}">
                        <ym:ToggleBlock
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ym:ToggleBlock.CheckedContent>
                                <ScrollViewer Margin="2">
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </ym:ToggleBlock.CheckedContent>
                            <ym:ToggleBlock.UnCheckedContent>
                                <ym:Empty />
                            </ym:ToggleBlock.UnCheckedContent>
                        </ym:ToggleBlock>
                    </Border>
                </Decorator>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  标题在顶部的可编辑下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxEditableTopTemplate" TargetType="ComboBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(ym:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengtymonverter}}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Margin="{Binding Path=(ym:TitleElement.MarginOnTheTop), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(ym:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(ym:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="contentPanel" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <ym:ToggleBlock
                    Grid.Column="1"
                    Padding="1,0"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick">
                    <ym:ToggleBlock.UnCheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.UnCheckedContent>
                    <ym:ToggleBlock.CheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource UpGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.CheckedContent>
                </ym:ToggleBlock>
                <TextBlock
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Style="{StaticResource TextBlockDefaultThiLight}"
                    Text="{Binding Path=(ym:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{TemplateBinding Text,
                                                 Converter={StaticResource String2VisibilityReConverter}}" />
                <TextBox
                    x:Name="PART_EditableTextBox"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Decorator Margin="8,0">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ActualWidth, ElementName=border}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0,0,0,8"
                            Background="{DynamicResource RegionBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0,1,0,0"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Effect="{StaticResource EffectShadow2}">
                            <ym:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <ym:ToggleBlock.CheckedContent>
                                    <ScrollViewer Margin="2">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </ym:ToggleBlock.CheckedContent>
                                <ym:ToggleBlock.UnCheckedContent>
                                    <ym:Empty />
                                </ym:ToggleBlock.UnCheckedContent>
                            </ym:ToggleBlock>
                        </Border>
                    </Decorator>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="contentPanel" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPanel" Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  标题在左侧的可编辑下拉框模板  -->
    <ControlTemplate x:Key="ComboBoxEditableLeftTemplate" TargetType="ComboBox">
        <Grid Height="{Binding Path=(ym:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(ym:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(ym:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="{Binding Path=(ym:TitleElement.MarginOnTheLeft), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(ym:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(ym:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(ym:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(ym:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Text="{Binding Path=(ym:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="contentPanel" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <ym:ToggleBlock
                    Grid.Column="1"
                    Padding="1,0"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Background="Transparent"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ToggleGesture="LeftClick">
                    <ym:ToggleBlock.UnCheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.UnCheckedContent>
                    <ym:ToggleBlock.CheckedContent>
                        <Path
                            Width="14"
                            Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Data="{StaticResource UpGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                    </ym:ToggleBlock.CheckedContent>
                </ym:ToggleBlock>
                <TextBlock
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Style="{StaticResource TextBlockDefaultThiLight}"
                    Text="{Binding Path=(ym:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{TemplateBinding Text,
                                                 Converter={StaticResource String2VisibilityReConverter}}" />
                <TextBox
                    x:Name="PART_EditableTextBox"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxEditableTextBox}" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Decorator Margin="8,0">
                        <Border
                            x:Name="dropDownBorder"
                            MinWidth="{Binding ActualWidth, ElementName=border}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            Margin="0,0,0,8"
                            Background="{DynamicResource RegionBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0,1,0,0"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Effect="{StaticResource EffectShadow2}">
                            <ym:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <ym:ToggleBlock.CheckedContent>
                                    <ScrollViewer Margin="2">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </ym:ToggleBlock.CheckedContent>
                                <ym:ToggleBlock.UnCheckedContent>
                                    <ym:Empty />
                                </ym:ToggleBlock.UnCheckedContent>
                            </ym:ToggleBlock>
                        </Border>
                    </Decorator>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=border}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=border}" />
            </Trigger>
            <Trigger Property="ym:DropDownElement.AutoWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{x:Static system:Double.MaxValue}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualHeight, ElementName=border}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="contentPanel" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_EditableTextBox" Property="IsFocused" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="contentPanel" Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  下拉项基样式  -->
    <Style x:Key="ComboBoxItemBaseStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  下拉框基样式  -->
    <Style
        x:Key="ComboBoxBaseStyle"
        BasedOn="{StaticResource InputElementBaseStyle}"
        TargetType="ComboBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemBaseStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  下拉框扩展样式  -->
    <Style
        x:Key="ComboBoxExtendBaseStyle"
        BasedOn="{StaticResource ComboBoxBaseStyle}"
        TargetType="ComboBox">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTopTemplate}" />
        <Setter Property="ym:InfoElement.Symbol" Value="●" />
        <Setter Property="ym:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="ym:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="False" />
                    <Condition Property="ym:InfoElement.TitlePlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource ComboBoxLeftTemplate}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="True" />
                    <Condition Property="ym:InfoElement.TitlePlacement" Value="Top" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTopTemplate}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="True" />
                    <Condition Property="ym:InfoElement.TitlePlacement" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableLeftTemplate}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource ComboBoxBaseStyle}" TargetType="ComboBox" />

    <Style
        x:Key="ComboBoxItem.Small"
        BasedOn="{StaticResource ComboBoxItemBaseStyle}"
        TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="MinHeight" Value="20" />
    </Style>

    <Style
        x:Key="ComboBox.Small"
        BasedOn="{StaticResource ComboBoxBaseStyle}"
        TargetType="ComboBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem.Small}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="6,0" />
    </Style>
    <Style
        x:Key="ComboBoxExtend"
        BasedOn="{StaticResource ComboBoxExtendBaseStyle}"
        TargetType="ComboBox" />

    <Style
        x:Key="ComboBoxExtend.Small"
        BasedOn="{StaticResource ComboBoxExtend}"
        TargetType="ComboBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem.Small}" />
        <Setter Property="ym:InfoElement.MinContentHeight" Value="20" />
        <Setter Property="ym:InfoElement.ContentHeight" Value="20" />
        <Setter Property="ym:TitleElement.MarginOnTheLeft" Value="0,3,6,0" />
        <Setter Property="ym:TitleElement.MarginOnTheTop" Value="6,0,0,1" />
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="MinHeight" Value="20" />
    </Style>
    <!--  endregion  -->

    <!--  region Drawer  -->
    <!--  Drawer  -->
    <!--  Base  -->
    <Style x:Key="DrawerBaseStyle" TargetType="ym:Drawer">
        <Setter Property="Dock" Value="Right" />
        <Setter Property="MaskBrush" Value="{DynamicResource DarkOpacityBrush}" />
    </Style>
    <Style BasedOn="{StaticResource DrawerBaseStyle}" TargetType="ym:Drawer" />
    <!--  endregion  -->

    <!--  region Growl  -->
    <!--  Growl YES  -->
    <Style TargetType="ym:GrowlWindow">
        <Setter Property="ym:WindowAttach.IgnoreAltF4" Value="True" />
        <Setter Property="ym:WindowAttach.ShowInTaskManager" Value="False" />
        <Setter Property="Width" Value="340" />
        <Setter Property="MaxWidth" Value="340" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
    </Style>

    <Style TargetType="ym:Growl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="Width" Value="320" />
        <Setter Property="Margin" Value="10,10,10,0" />
        <Setter Property="MaxWidth" Value="320" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="8" />
        <Setter Property="Background" Value="{DynamicResource ThirdlyRegionBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:Growl">
                    <Grid Name="PART_GridMain" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="{TemplateBinding MaxWidth}" />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="3"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Effect="{StaticResource EffectShadow2}" />
                        <Path
                            Grid.Row="0"
                            Grid.Column="0"
                            Width="30"
                            Height="30"
                            Margin="0,15,0,0"
                            VerticalAlignment="Top"
                            Data="{TemplateBinding Icon}"
                            Fill="{TemplateBinding IconBrush}"
                            FlowDirection="LeftToRight"
                            Stretch="Uniform" />
                        <StackPanel
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,10,10,10"
                            VerticalAlignment="Center">
                            <TextBlock
                                HorizontalAlignment="Left"
                                Style="{StaticResource TextBlockDefault}"
                                Text="{TemplateBinding Message}"
                                TextWrapping="Wrap" />
                            <TextBlock
                                Margin="0,4,0,0"
                                HorizontalAlignment="Left"
                                Foreground="{DynamicResource SecondaryTextBrush}"
                                Style="{StaticResource TextBlockDefault}"
                                Text="{Binding Time, RelativeSource={RelativeSource AncestorType=ym:Growl}, StringFormat=yyyy/MM/dd HH:mm:ss}"
                                Visibility="{Binding ShowDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                        </StackPanel>
                        <Button
                            Name="PART_ButtonClose"
                            Grid.Row="0"
                            Grid.Column="2"
                            Width="18"
                            Height="18"
                            Margin="11,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Command="interactivity:ControlCommands.Close"
                            Style="{StaticResource ButtonCustom}"
                            Visibility="Collapsed">
                            <Path
                                Data="{StaticResource ErrorGeometry}"
                                Fill="{DynamicResource SecondaryTextBrush}"
                                FlowDirection="LeftToRight"
                                Stretch="Uniform" />
                        </Button>
                        <UniformGrid
                            Name="PART_PanelMore"
                            Grid.Row="1"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Height="28"
                            Columns="2"
                            IsEnabled="False"
                            Visibility="Collapsed">
                            <Button
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                Command="interactivity:ControlCommands.Cancel"
                                Style="{StaticResource ButtonCustom}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    Foreground="{DynamicResource DangerBrush}"
                                    Text="{Binding CancelStr, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Button>
                            <Button
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                Command="interactivity:ControlCommands.Confirm"
                                Style="{StaticResource ButtonCustom}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    Foreground="{DynamicResource PrimaryBrush}"
                                    Text="{Binding ConfirmStr, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Button>
                        </UniformGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  endregion  -->

    <!--  region ScrollViewer  -->
    <!--  ScrollViewer YES  -->
    <!--  Base  -->
    <Style x:Key="ScrollBarBaseRepeatButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarBaseThumbVertical" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardMouseEnter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardMouseLeave">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="2" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="-2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Width="{TemplateBinding Width}" Background="Transparent">
                        <Rectangle
                            x:Name="rectangle"
                            Width="2"
                            Height="{TemplateBinding Height}"
                            HorizontalAlignment="Right"
                            Fill="{TemplateBinding Background}"
                            RadiusX="1"
                            RadiusY="1"
                            SnapsToDevicePixels="True">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="-2" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource StoryboardMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource StoryboardMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarBaseThumbHorizontal" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardMouseEnter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.1" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardMouseLeave">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Height">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="2" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="-2" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                        <Rectangle
                            x:Name="rectangle"
                            Width="{TemplateBinding Width}"
                            Height="2"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding Background}"
                            RadiusX="1"
                            RadiusY="1"
                            SnapsToDevicePixels="True">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform Y="-2" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource SecondaryTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource PrimaryTextBrush}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource StoryboardMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource StoryboardMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarBaseStyle" TargetType="ScrollBar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="8" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <ym:SimplePanel x:Name="Bg" SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Background}" />
                        <Track
                            x:Name="PART_Track"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollBarBaseThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                    </ym:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="8" />
                <Setter Property="MinHeight" Value="8" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <ym:SimplePanel x:Name="Bg" SnapsToDevicePixels="true">
                                <Border Background="{TemplateBinding Background}" />
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Background="{TemplateBinding Foreground}" Style="{StaticResource ScrollBarBaseThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                            </ym:SimplePanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ScrollViewerNativeBaseControlTemplate" TargetType="ScrollViewer">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardMouseOver">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryboardCommon">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".3" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".3" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Opacity=".3"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Opacity=".3"
                Orientation="Horizontal"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardMouseOver}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardCommon}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollViewerNativeAutoHideBaseControlTemplate" TargetType="ScrollViewer">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardMouseOver">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryboardCommon">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Opacity="0"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Opacity="0"
                Orientation="Horizontal"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardMouseOver}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardCommon}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ScrollViewerNativeBaseStyle" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerNativeAutoHideBaseControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="ym:ScrollViewerAttach.AutoHide" Value="False">
                <Setter Property="Template" Value="{StaticResource ScrollViewerNativeBaseControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ScrollViewerBaseControlTemplate" TargetType="ym:ScrollViewer">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardMouseOver">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryboardCommon">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".3" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".3" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardMouseOver}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardCommon}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollViewerAutoHideBaseControlTemplate" TargetType="ym:ScrollViewer">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardMouseOver">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.1" Value=".8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="StoryboardCommon">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Opacity="0"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Opacity="0"
                Orientation="Horizontal"
                Style="{StaticResource ScrollBarBaseStyle}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardMouseOver}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardCommon}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ScrollViewerBaseStyle" TargetType="ym:ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerAutoHideBaseControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="ym:ScrollViewerAttach.AutoHide" Value="False">
                <Setter Property="Template" Value="{StaticResource ScrollViewerBaseControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  default style  -->
    <Style BasedOn="{StaticResource ScrollViewerNativeBaseStyle}" TargetType="ScrollViewer" />

    <Style BasedOn="{StaticResource ScrollViewerBaseStyle}" TargetType="ym:ScrollViewer" />

    <Style
        x:Key="ScrollViewerUpDownRepeatButtonStyle"
        BasedOn="{StaticResource RepeatButtonIcon}"
        TargetType="RepeatButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="ClickMode" Value="Hover" />
    </Style>

    <ControlTemplate x:Key="ScrollViewerUpDownControlTemplate" TargetType="ScrollViewer">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <RepeatButton
                ym:IconElement.Geometry="{StaticResource UpGeometry}"
                Command="{x:Static ScrollBar.LineUpCommand}"
                CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ScrollViewerUpDownRepeatButtonStyle}">
                <RepeatButton.Visibility>
                    <MultiBinding
                        Converter="{StaticResource MenuScrollingVisibilityConverter}"
                        ConverterParameter="0"
                        FallbackValue="Visibility.Collapsed">
                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </RepeatButton.Visibility>
            </RepeatButton>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="1"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <RepeatButton
                Grid.Row="2"
                ym:IconElement.Geometry="{StaticResource DownGeometry}"
                Command="{x:Static ScrollBar.LineDownCommand}"
                CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ScrollViewerUpDownRepeatButtonStyle}">
                <RepeatButton.Visibility>
                    <MultiBinding
                        Converter="{StaticResource MenuScrollingVisibilityConverter}"
                        ConverterParameter="100"
                        FallbackValue="Visibility.Collapsed">
                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </RepeatButton.Visibility>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollViewerUpDown" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerUpDownControlTemplate}" />
    </Style>
    <!--  endregion  -->

    <!--  region ListView  -->
    <!--  ListView YES  -->

    <!--  Base  -->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridViewColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="MinHeight" Value="{Binding Path=(ym:GridViewAttach.ColumnHeaderHeight), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <ym:SimplePanel SnapsToDevicePixels="true">
                        <Border
                            x:Name="HeaderBorder"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter
                                x:Name="HeaderContent"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Canvas>
                    </ym:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemBaseStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        SnapsToDevicePixels="true">
                        <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource TextIconBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
            </MultiTrigger>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border
                                x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListViewBaseStyle" TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemBaseStyle}" />
        <Setter Property="ym:GridViewAttach.ColumnHeaderHeight" Value="44" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Storyboard1">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value=".8" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Storyboard2">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:.2" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <DockPanel Grid.ColumnSpan="2">
                                            <ScrollViewer
                                                DockPanel.Dock="Top"
                                                Focusable="false"
                                                HorizontalScrollBarVisibility="Hidden"
                                                VerticalScrollBarVisibility="Hidden">
                                                <GridViewHeaderRowPresenter
                                                    Margin="2,0"
                                                    AllowsColumnReorder="{Binding View.AllowsColumnReorder, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    ColumnHeaderContainerStyle="{Binding View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    ColumnHeaderContextMenu="{Binding View.ColumnHeaderContextMenu, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    ColumnHeaderTemplate="{Binding View.ColumnHeaderTemplate, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    ColumnHeaderTemplateSelector="{Binding View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    ColumnHeaderToolTip="{Binding View.ColumnHeaderToolTip, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    Columns="{Binding View.Columns, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </DockPanel>
                                        <ym:ToggleBlock
                                            Grid.Row="1"
                                            Grid.RowSpan="2"
                                            Grid.ColumnSpan="2"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            IsChecked="{Binding HasItems, RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}">
                                            <ym:ToggleBlock.CheckedContent>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            </ym:ToggleBlock.CheckedContent>
                                            <ym:ToggleBlock.UnCheckedContent>
                                                <ym:Empty />
                                            </ym:ToggleBlock.UnCheckedContent>
                                        </ym:ToggleBlock>
                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Opacity="0"
                                            Orientation="Vertical"
                                            Style="{StaticResource ScrollBarBaseStyle}"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <ScrollBar
                                            x:Name="PART_HorizontalScrollBar"
                                            Grid.Row="1"
                                            VerticalAlignment="Bottom"
                                            Maximum="{TemplateBinding ScrollableWidth}"
                                            Opacity="0"
                                            Orientation="Horizontal"
                                            Style="{StaticResource ScrollBarBaseStyle}"
                                            ViewportSize="{TemplateBinding ViewportWidth}"
                                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard Storyboard="{StaticResource Storyboard1}" />
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave">
                                            <BeginStoryboard Storyboard="{StaticResource Storyboard2}" />
                                        </EventTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="View" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer Focusable="false">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource ListViewBaseStyle}" TargetType="ListView" />
    <!--  endregion  -->

    <!--  region Loading  -->
    <!--  Loading  YES  -->
    <!--  Base  -->
    <Style x:Key="LoadingBaseStyle" TargetType="ym:LoadingBase">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="DotDiameter" Value="10" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
    </Style>
    <Style
        x:Key="LoadingCircleBaseStyle"
        BasedOn="{StaticResource LoadingBaseStyle}"
        TargetType="ym:LoadingCircle">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="DotDiameter" Value="5" />
        <Setter Property="DotInterval" Value="30" />
        <Setter Property="DotOffSet" Value="60" />
        <Setter Property="DotDelayTime" Value="90" />
        <Setter Property="DotSpeed" Value="4" />
    </Style>
    <Style
        x:Key="LoadingLineBaseStyle"
        BasedOn="{StaticResource LoadingBaseStyle}"
        TargetType="ym:LoadingLine">
        <Setter Property="DotDiameter" Value="5" />
    </Style>

    <!--  直线加载条默认样式  -->
    <Style BasedOn="{StaticResource LoadingLineBaseStyle}" TargetType="ym:LoadingLine" />

    <Style
        x:Key="LoadingLineLight"
        BasedOn="{StaticResource LoadingLineBaseStyle}"
        TargetType="ym:LoadingLine">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
    </Style>

    <Style
        x:Key="LoadingLineLarge"
        BasedOn="{StaticResource LoadingLineBaseStyle}"
        TargetType="ym:LoadingLine">
        <Setter Property="DotDiameter" Value="10" />
    </Style>

    <Style
        x:Key="LoadingLineLargeLight"
        BasedOn="{StaticResource LoadingLineLarge}"
        TargetType="ym:LoadingLine">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
    </Style>

    <!--  圆形加载条默认样式  -->
    <Style BasedOn="{StaticResource LoadingCircleBaseStyle}" TargetType="ym:LoadingCircle" />

    <Style
        x:Key="LoadingCircleLight"
        BasedOn="{StaticResource LoadingCircleBaseStyle}"
        TargetType="ym:LoadingCircle">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
    </Style>

    <Style
        x:Key="LoadingCircleLarge"
        BasedOn="{StaticResource LoadingCircleBaseStyle}"
        TargetType="ym:LoadingCircle">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="DotDiameter" Value="10" />
        <Setter Property="DotInterval" Value="20" />
        <Setter Property="DotOffSet" Value="40" />
        <Setter Property="DotDelayTime" Value="120" />
    </Style>

    <Style
        x:Key="LoadingCircleLargeLight"
        BasedOn="{StaticResource LoadingCircleLarge}"
        TargetType="ym:LoadingCircle">
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
    </Style>
    <!--  endregion  -->

    <!--  region SideMenu  -->
    <!--  SideMenu YES  -->
    <!--  Base  -->
    <Style
        x:Key="SideMenuItemBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="ym:SideMenuItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
        <Setter Property="Role" Value="Item" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenuItem">
                    <Border Name="BorderRoot" Background="{TemplateBinding Background}">
                        <ym:SimplePanel>
                            <Rectangle
                                Width="4"
                                HorizontalAlignment="Left"
                                Fill="{TemplateBinding BorderBrush}" />
                            <ContentControl Margin="4,0,0,0">
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ContentControl Name="PresenterIcon" Width="40">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon" />
                                    </ContentControl>
                                    <ContentPresenter
                                        Name="PresenterHeader"
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header" />
                                </DockPanel>
                            </ContentControl>
                        </ym:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PresenterIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ym:SideMenuItem}}" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                            <Setter TargetName="PresenterHeader" Property="TextElement.FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideMenuItemAccordionBaseStyle"
        BasedOn="{StaticResource SideMenuItemBaseStyle}"
        TargetType="ym:SideMenuItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenuItem">
                    <Border Name="BorderRoot" Background="{TemplateBinding Background}">
                        <ym:SimplePanel>
                            <Rectangle
                                Width="4"
                                HorizontalAlignment="Left"
                                Fill="{TemplateBinding BorderBrush}" />
                            <ContentControl Margin="4,0,0,0">
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ContentControl Name="PresenterIcon" Width="40">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon" />
                                    </ContentControl>
                                    <ContentPresenter
                                        Name="PresenterHeader"
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header" />
                                </DockPanel>
                            </ContentControl>
                        </ym:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PresenterIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ym:SideMenuItem}}" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                            <Setter TargetName="PresenterHeader" Property="TextElement.FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideMenuItemHeaderBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="ym:SideMenuItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0Margin0}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideMenuItemBaseStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenuItem">
                    <Border Name="BorderRoot" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Name="BorderBack" Background="{TemplateBinding Background}" />
                            <ContentControl Grid.Row="0" Margin="4,0,0,0">
                                <DockPanel
                                    Name="PanelHeader"
                                    Margin="{TemplateBinding Padding}"
                                    Background="Transparent">
                                    <ContentControl Name="PresenterIcon" Width="40">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon" />
                                    </ContentControl>
                                    <ContentPresenter
                                        Name="PresenterHeader"
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header" />
                                </DockPanel>
                            </ContentControl>
                            <StackPanel
                                x:Name="PART_Panel"
                                Grid.Row="1"
                                Height="{Binding PanelAreaLength, RelativeSource={RelativeSource AncestorType=ym:SideMenu}}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PresenterIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderBack" Property="BorderThickness" Value="4,0,0,0" />
                            <Setter TargetName="BorderBack" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter TargetName="PresenterHeader" Property="TextElement.FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger SourceName="PanelHeader" Property="IsMouseOver" Value="true">
                            <Setter TargetName="BorderBack" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SideMenuItemHeaderAccordionBaseStyle"
        BasedOn="{StaticResource SideMenuItemHeaderBaseStyle}"
        TargetType="ym:SideMenuItem">
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideMenuItemAccordionBaseStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenuItem">
                    <Border Name="BorderRoot" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Name="BorderBack" Background="{TemplateBinding Background}" />
                            <ContentControl Grid.Row="0" Margin="4,0,0,0">
                                <DockPanel
                                    Name="PanelHeader"
                                    Margin="{TemplateBinding Padding}"
                                    Background="Transparent">
                                    <ContentControl Name="PresenterIcon" Width="40">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            ContentSource="Icon" />
                                    </ContentControl>
                                    <ContentPresenter
                                        Name="PresenterHeader"
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ContentSource="Header" />
                                </DockPanel>
                            </ContentControl>
                            <ScrollViewer
                                Grid.Row="1"
                                Height="{Binding PanelAreaLength, RelativeSource={RelativeSource AncestorType=ym:SideMenu}}"
                                Visibility="{Binding Visibility, ElementName=PART_Panel}">
                                <StackPanel x:Name="PART_Panel" Visibility="Collapsed" />
                            </ScrollViewer>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PresenterIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderBack" Property="BorderThickness" Value="4,0,0,0" />
                            <Setter TargetName="BorderBack" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter TargetName="PresenterHeader" Property="TextElement.FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger SourceName="PanelHeader" Property="IsMouseOver" Value="true">
                            <Setter TargetName="BorderBack" Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideMenuBaseStyle" TargetType="ym:SideMenu">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideMenuItemHeaderBaseStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenu">
                    <Border
                        Name="BorderRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer>
                            <StackPanel x:Name="PART_Panel" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SideMenuBaseStyle}" TargetType="ym:SideMenu" />

    <Style
        x:Key="SideMenuAccordion"
        BasedOn="{StaticResource SideMenuBaseStyle}"
        TargetType="ym:SideMenu">
        <Setter Property="ExpandMode" Value="Accordion" />
        <Setter Property="PanelAreaLength" Value="200" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideMenuItemHeaderAccordionBaseStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:SideMenu">
                    <Border
                        Name="BorderRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel x:Name="PART_Panel" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  endregion  -->

    <!--  region ProgressBar  -->
    <!--  ProgressBar YES  -->
    <!--  Base  -->
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0" Color="#00FFFFFF" />
        <GradientStop Offset="0.4" Color="#60FFFFFF" />
        <GradientStop Offset="0.6" Color="#60FFFFFF" />
        <GradientStop Offset="1" Color="#00FFFFFF" />
    </LinearGradientBrush>

    <Style x:Key="ProgressBarBaseStyle" TargetType="ProgressBar">
        <Setter Property="ym:VisualElement.Text">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource Number2PercentageConverter}" StringFormat="{}{0:F0} %">
                    <Binding Path="Value" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="Maximum" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="20" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        x:Name="TemplateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <ym:SimplePanel>
                            <Rectangle x:Name="PART_Track" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{Binding Path=(ym:VisualElement.Text), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Visibility, ElementName=PART_GlowRect}" />
                            <Border
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource BorderClip}">
                                <ym:SimplePanel>
                                    <Border x:Name="Indicator" Background="{TemplateBinding Foreground}">
                                        <Border Width="{Binding ActualWidth, ElementName=TemplateRoot}">
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource TextIconBrush}"
                                                Text="{Binding Path=(ym:VisualElement.Text), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Border>
                                    </Border>
                                    <Rectangle
                                        x:Name="PART_GlowRect"
                                        Width="100"
                                        Margin="-100,0,0,0"
                                        HorizontalAlignment="Left"
                                        Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" />
                                    <Rectangle
                                        x:Name="Animation"
                                        Fill="{TemplateBinding Foreground}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Visibility="Collapsed">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </ym:SimplePanel>
                            </Border>
                        </ym:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_GlowRect" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressBarStripeBaseStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="20" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnLoaded">
                            <DoubleAnimationUsingKeyFrames
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="Indicator"
                                Storyboard.TargetProperty="(Border.Background).(Brush.Transform).(TransformGroup.Children)[1].(TranslateTransform.X)">
                                <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                                <LinearDoubleKeyFrame KeyTime="0:0:.25" Value="21" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ym:SimplePanel x:Name="TemplateRoot" SnapsToDevicePixels="true">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Rectangle x:Name="PART_Track" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Border
                                x:Name="Indicator"
                                Background="{TemplateBinding Foreground}"
                                CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Decorator>
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="Indicator">
                            <BeginStoryboard Storyboard="{StaticResource OnLoaded}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CircleProgressBarIndeterminateTemplate" TargetType="ym:CircleProgressBar">
        <ControlTemplate.Resources>
            <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="TemplateRoot"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                    <LinearDoubleKeyFrame KeyTime="0:0:1.568" Value="360" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="135" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="270" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.999"
                        Value="405" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:2.666"
                        Value="540" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:3.333"
                        Value="675" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:3.999"
                        Value="810" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:4.666"
                        Value="945" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:5.332"
                        Value="1080" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(shapes:Arc.StartAngle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="-5" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="-130" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="-5" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames
                    RepeatBehavior="Forever"
                    Storyboard.TargetName="arc"
                    Storyboard.TargetProperty="(shapes:Arc.EndAngle)">
                    <SplineDoubleKeyFrame KeyTime="0" Value="5" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:0.666"
                        Value="130" />
                    <SplineDoubleKeyFrame
                        KeySpline="0.4,0.0,0.2,1"
                        KeyTime="0:0:1.333"
                        Value="5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <ym:SimplePanel x:Name="TemplateRoot" RenderTransformOrigin="0.5,0.5">
            <ym:SimplePanel.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                </TransformGroup>
            </ym:SimplePanel.RenderTransform>
            <shapes:Arc
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="360"
                Fill="{TemplateBinding Background}"
                Stretch="None"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="0" />
            <shapes:Arc
                x:Name="arc"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="5"
                Fill="{TemplateBinding Foreground}"
                RenderTransformOrigin="0.5,0.5"
                StartAngle="-5"
                Stretch="None"
                StrokeThickness="0">
                <shapes:Arc.RenderTransform>
                    <TransformGroup>
                        <RotateTransform />
                    </TransformGroup>
                </shapes:Arc.RenderTransform>
            </shapes:Arc>
        </ym:SimplePanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CircleProgressBarTemplate" TargetType="ym:CircleProgressBar">
        <ym:SimplePanel x:Name="TemplateRoot">
            <shapes:Arc
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                EndAngle="360"
                Fill="{TemplateBinding Background}"
                Stretch="None"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="0" />
            <shapes:Arc
                x:Name="PART_Indicator"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"
                ArcThickness="{TemplateBinding ArcThickness}"
                Fill="{TemplateBinding Foreground}"
                Stretch="None"
                StrokeThickness="0" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="{TemplateBinding Foreground}"
                Text="{TemplateBinding Text}"
                Visibility="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
        </ym:SimplePanel>
    </ControlTemplate>

    <Style x:Key="ProgressBarCircleBaseStyle" TargetType="ym:CircleProgressBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Width" Value="100" />
        <Setter Property="ArcThickness" Value="4" />
        <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat={}{0:F0} %}" />
        <Setter Property="Template" Value="{StaticResource CircleProgressBarTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter Property="Template" Value="{StaticResource CircleProgressBarIndeterminateTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProgressBarWaveBaseStyle" TargetType="ym:WaveProgressBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Self}, StringFormat={}{0:F0} %}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:WaveProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardOnLoaded" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Wave" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-400" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{StaticResource BorderCircular}">
                            <Viewbox>
                                <Border
                                    x:Name="PART_Clip"
                                    Width="200"
                                    Height="200"
                                    CornerRadius="100"
                                    Style="{StaticResource BorderCircularClip}">
                                    <Path
                                        x:Name="PART_Wave"
                                        Width="600"
                                        Height="250"
                                        Margin="0,0,-400,-20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="{TemplateBinding WaveFill}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        Stroke="{TemplateBinding WaveStroke}"
                                        StrokeThickness="{TemplateBinding WaveThickness}"
                                        UseLayoutRounding="False">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,1">
                                                    <PolyBezierSegment Points="0.5,1 0.5,0 1,0" />
                                                    <PolyBezierSegment Points="1.5,0 1.5,1 2,1" />
                                                    <PolyBezierSegment Points="2.5,1 2.5,0 3,0" />
                                                    <PolyLineSegment Points="3,0 3,10, 0,10 0,1" />
                                                </PathFigure>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Border>
                            </Viewbox>
                        </Border>
                        <TextBlock
                            Margin="0,10,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Text}"
                            Visibility="{Binding ShowText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Wave">
                            <BeginStoryboard Name="BeginStoryboardWave" Storyboard="{StaticResource StoryboardOnLoaded}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="PART_Wave">
                            <StopStoryboard BeginStoryboardName="BeginStoryboardWave" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ProgressBarBaseStyle}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarSuccess"
        BasedOn="{StaticResource ProgressBarBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarInfo"
        BasedOn="{StaticResource ProgressBarBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarWarning"
        BasedOn="{StaticResource ProgressBarBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarDanger"
        BasedOn="{StaticResource ProgressBarBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarPrimaryStripe"
        BasedOn="{StaticResource ProgressBarStripeBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground">
            <Setter.Value>
                <DrawingBrush
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,20,32"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Transform>
                        <TransformGroup>
                            <RotateTransform Angle="20" />
                            <TranslateTransform x:Name="MyTransform" X="0" />
                        </TransformGroup>
                    </DrawingBrush.Transform>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="{DynamicResource DarkPrimaryColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource DarkPrimaryColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource BackgroundColor}" />
                                    <GradientStop Offset="1" Color="{DynamicResource BackgroundColor}" />
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,20,32" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ProgressBarSuccessStripe"
        BasedOn="{StaticResource ProgressBarStripeBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground">
            <Setter.Value>
                <DrawingBrush
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,20,32"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Transform>
                        <TransformGroup>
                            <RotateTransform Angle="20" />
                            <TranslateTransform x:Name="MyTransform" X="0" />
                        </TransformGroup>
                    </DrawingBrush.Transform>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="{DynamicResource DarkSuccessColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource DarkSuccessColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource BackgroundColor}" />
                                    <GradientStop Offset="1" Color="{DynamicResource BackgroundColor}" />
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,20,32" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ProgressBarInfoStripe"
        BasedOn="{StaticResource ProgressBarStripeBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground">
            <Setter.Value>
                <DrawingBrush
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,20,32"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Transform>
                        <TransformGroup>
                            <RotateTransform Angle="20" />
                            <TranslateTransform x:Name="MyTransform" X="0" />
                        </TransformGroup>
                    </DrawingBrush.Transform>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="{DynamicResource DarkInfoColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource DarkInfoColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource BackgroundColor}" />
                                    <GradientStop Offset="1" Color="{DynamicResource BackgroundColor}" />
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,20,32" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ProgressBarWarningStripe"
        BasedOn="{StaticResource ProgressBarStripeBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground">
            <Setter.Value>
                <DrawingBrush
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,20,32"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Transform>
                        <TransformGroup>
                            <RotateTransform Angle="20" />
                            <TranslateTransform x:Name="MyTransform" X="0" />
                        </TransformGroup>
                    </DrawingBrush.Transform>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="{DynamicResource DarkWarningColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource DarkWarningColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource BackgroundColor}" />
                                    <GradientStop Offset="1" Color="{DynamicResource BackgroundColor}" />
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,20,32" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ProgressBarDangerStripe"
        BasedOn="{StaticResource ProgressBarStripeBaseStyle}"
        TargetType="ProgressBar">
        <Setter Property="Foreground">
            <Setter.Value>
                <DrawingBrush
                    Stretch="None"
                    TileMode="Tile"
                    Viewport="0,0,20,32"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Transform>
                        <TransformGroup>
                            <RotateTransform Angle="20" />
                            <TranslateTransform x:Name="MyTransform" X="0" />
                        </TransformGroup>
                    </DrawingBrush.Transform>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Brush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0" Color="{DynamicResource DarkDangerColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource DarkDangerColor}" />
                                    <GradientStop Offset="0.5" Color="{DynamicResource BackgroundColor}" />
                                    <GradientStop Offset="1" Color="{DynamicResource BackgroundColor}" />
                                </LinearGradientBrush>
                            </GeometryDrawing.Brush>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0,0,20,32" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ProgressBarCircleBaseStyle}" TargetType="ym:CircleProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarSuccessCircle"
        BasedOn="{StaticResource ProgressBarCircleBaseStyle}"
        TargetType="ym:CircleProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarInfoCircle"
        BasedOn="{StaticResource ProgressBarCircleBaseStyle}"
        TargetType="ym:CircleProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarWarningCircle"
        BasedOn="{StaticResource ProgressBarCircleBaseStyle}"
        TargetType="ym:CircleProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarDangerCircle"
        BasedOn="{StaticResource ProgressBarCircleBaseStyle}"
        TargetType="ym:CircleProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style BasedOn="{StaticResource ProgressBarWaveBaseStyle}" TargetType="ym:WaveProgressBar">
        <Setter Property="WaveFill" Value="{DynamicResource DarkPrimaryBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarSuccessWave"
        BasedOn="{StaticResource ProgressBarWaveBaseStyle}"
        TargetType="ym:WaveProgressBar">
        <Setter Property="WaveFill" Value="{DynamicResource DarkSuccessBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarInfoWave"
        BasedOn="{StaticResource ProgressBarWaveBaseStyle}"
        TargetType="ym:WaveProgressBar">
        <Setter Property="WaveFill" Value="{DynamicResource DarkInfoBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarWarningWave"
        BasedOn="{StaticResource ProgressBarWaveBaseStyle}"
        TargetType="ym:WaveProgressBar">
        <Setter Property="WaveFill" Value="{DynamicResource DarkWarningBrush}" />
    </Style>

    <Style
        x:Key="ProgressBarDangerWave"
        BasedOn="{StaticResource ProgressBarWaveBaseStyle}"
        TargetType="ym:WaveProgressBar">
        <Setter Property="WaveFill" Value="{DynamicResource DarkDangerBrush}" />
    </Style>

    <Style x:Key="ProgressBarFlat" TargetType="ProgressBar">
        <Setter Property="Height" Value="4" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ym:SimplePanel
                        x:Name="TemplateRoot"
                        ClipToBounds="True"
                        SnapsToDevicePixels="true">
                        <Rectangle
                            x:Name="PART_Track"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="0" />
                        <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                        </Decorator>
                        <Rectangle
                            x:Name="Animation"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5"
                            Visibility="Collapsed">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </ym:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IsIndeterminate}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Height" Value="{x:Static system:Double.NaN}" />
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  endregion  -->

    <!--  region PopTip  -->
    <!--  PopTip NG  -->
    <!--  Base  -->
    <Style x:Key="PoptipBaseStyle" TargetType="ym:Poptip">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="ym:BorderElement.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ym:Poptip">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(ym:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource PoptipBaseStyle}" TargetType="ym:Poptip" />

    <!--  endregion  -->

    <!--  Slider YES  -->
    <!--  ListBox  NG  -->

    <!--  PasswordBox NG  -->
    <!--  ImageViewer NG  -->
    <!--  ImageSelector NG  -->
    <!--  Carousel NG  -->

</ResourceDictionary>
